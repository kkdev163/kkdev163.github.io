<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://kkdev163.github.io/blog</id>
    <title>kkdev163 Blog</title>
    <updated>2021-12-15T00:00:00.000Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://kkdev163.github.io/blog"/>
    <subtitle>kkdev163 Blog</subtitle>
    <icon>https://kkdev163.github.io/img/favicon.ico</icon>
    <entry>
        <title type="html"><![CDATA[Wechaty-puppet-padlocal 实现初探]]></title>
        <id>https://kkdev163.github.io/blog/inner-glance-of-padlocal</id>
        <link href="https://kkdev163.github.io/blog/inner-glance-of-padlocal"/>
        <updated>2021-12-15T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[本文首发于 Wechaty 社区]]></summary>
        <content type="html"><![CDATA[<blockquote><p>本文首发于 <a href="https://wechaty.js.org/2021/12/15/inner-glance-of-padlocal" target="_blank" rel="noopener noreferrer">Wechaty 社区</a></p></blockquote><h2 class="anchor anchorWithStickyNavbar_LWe7" id="引言">引言<a href="#引言" class="hash-link" aria-label="引言的直接链接" title="引言的直接链接">​</a></h2><p>笔者是 <a href="https://wechaty.js.org/" target="_blank" rel="noopener noreferrer">Wechaty</a> 和 <a href="https://wechaty.js.org/docs/puppet-providers/padlocal" target="_blank" rel="noopener noreferrer">whacty-puppet-padlocal</a> 的一名普通用户, 曾在 Wechaty 社区上发布了一篇博文<a href="https://wechaty.js.org/2021/05/02/wechaty-bible-chatbot/" target="_blank" rel="noopener noreferrer">《微信群机器人-读经助手》</a>。此次出于学习的目的，阅读了 Wechaty 社区上发布的 PadLocal <a href="https://wechaty.js.org/2020/10/12/puppet-padlocal-intro/" target="_blank" rel="noopener noreferrer">相关博文</a> 及 Github 上开源的 <a href="https://github.com/padlocal/wechaty-puppet-padlocal" target="_blank" rel="noopener noreferrer">wechaty-puppet-padlocal</a>、<a href="https://github.com/padlocal/padlocal-client-ts" target="_blank" rel="noopener noreferrer">padlocal-client-ts</a> 等仓库代码，对 whacty-puppet-padlocal 的实现做一次 简单、粗浅 的梳理，希望能够借此机会与广大开发者有所交流，帮助自己进一步学习 Wechaty 生态。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="心中的疑问">心中的疑问<a href="#心中的疑问" class="hash-link" aria-label="心中的疑问的直接链接" title="心中的疑问的直接链接">​</a></h2><p>在阅读 PadLocal 作者的<a href="https://wechaty.js.org/2020/10/12/puppet-padlocal-intro/" target="_blank" rel="noopener noreferrer">文章</a>中，作者给出了 PadLocal 的整体架构拓扑图:</p><p><img loading="lazy" alt="image" src="/assets/images/topological-graph-08c99dee543d96a5a3b1b0699413dc41.webp" width="926" height="444" class="img_ev3q"></p><p>作者在文中提到:</p><blockquote><p>我们利用了 GRPC 的双向通信机制，让 puppet 成为代理，将所有流量通过 puppet 转发给 WeChatServer。同时由 puppet 来维持和 WeChatServer 之间的长连接。</p></blockquote><p>在读到此处时，笔者产生了几个好奇的问题：</p><ul><li>PadLocal、PadLocalServer 在 Wechaty 整体架构中主要扮演什么角色？</li><li>有哪些类型的请求需要通过 grpc 的方式与 PadLocalServer 通信？</li><li>大体的扫码登录流程是怎么样的？</li><li>大体的消息收发流程是怎么样的？</li><li>到底有没有一个真实的 ipad 设备，在登录着微信账号？</li></ul><p>带着这几个问题，笔者阅读了<a href="https://github.com/padlocal/wechaty-puppet-padlocal" target="_blank" rel="noopener noreferrer">wechaty-puppet-padlocal</a>、<a href="https://github.com/padlocal/padlocal-client-ts" target="_blank" rel="noopener noreferrer">padlocal-client-ts</a> 等仓库代码。下文将为大家做简单、粗浅的解答。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="整体架构">整体架构<a href="#整体架构" class="hash-link" aria-label="整体架构的直接链接" title="整体架构的直接链接">​</a></h2><p><img loading="lazy" alt="整体架构" src="/assets/images/graph-728e3b884c0e9d5a387076e991f1156f.webp" width="827" height="544" class="img_ev3q"></p><p>我们从上往下看，在应用层我们的微信机器人直接与 Wechaty SDK 交互，在 Wechaty SDK 上调用方法，并监听一些事件。例如以下示例代码，我们在 Wechaty 实例上监听了 <code>scan</code>、<code>login</code>、<code>message</code> 等事件，并调用了 start() 方法。</p><div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">// Importing the Wechaty npm package</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword module" style="color:#00009f">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color:#393A34">{</span><span class="token imports"> </span><span class="token imports maybe-class-name">Wechaty</span><span class="token imports"> </span><span class="token imports punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword module" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"wechaty"</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// Initializing the bot</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> bot </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">Wechaty</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token literal-property property" style="color:#36acaa">name</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"starter-bot"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// Starting the bot</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">bot</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">on</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"scan"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">qrcode</span><span class="token parameter punctuation" style="color:#393A34">,</span><span class="token parameter"> status</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:#393A34">=&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token console class-name">console</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">log</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token template-string string" style="color:#e3116c">Scan QR Code to login: </span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">${</span><span class="token template-string interpolation">status</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">}</span><span class="token template-string string" style="color:#e3116c">\nhttps://wechaty.js.org/qrcode/</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">${</span><span class="token template-string interpolation function" style="color:#d73a49">encodeURIComponent</span><span class="token template-string interpolation punctuation" style="color:#393A34">(</span><span class="token template-string interpolation"></span><br></span><span class="token-line" style="color:#393A34"><span class="token template-string interpolation">        qrcode</span><br></span><span class="token-line" style="color:#393A34"><span class="token template-string interpolation">      </span><span class="token template-string interpolation punctuation" style="color:#393A34">)</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">}</span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">on</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"login"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">user</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token console class-name">console</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">log</span><span class="token punctuation" style="color:#393A34">(</span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token template-string string" style="color:#e3116c">User </span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">${</span><span class="token template-string interpolation">user</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">}</span><span class="token template-string string" style="color:#e3116c"> logged in</span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">on</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"message"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">message</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token console class-name">console</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">log</span><span class="token punctuation" style="color:#393A34">(</span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token template-string string" style="color:#e3116c">Message: </span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">${</span><span class="token template-string interpolation">message</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">}</span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">start</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>调用 start 方法后，我们分 方法调用 和 事件响应 两条链路来看整体的架构流水线。</p><p><strong>第一条从上往下的 方法调用:</strong></p><p><code>wechaty.start()</code> -&gt; <code>PuppetPadLocal.start()</code> -&gt; <code>client = PadLocalClient.create()</code> -&gt; <code>client.api.login({onQrCodeEvent，onLoginSuccess})</code> -&gt; <code>client.request(pb.LoginRequest)</code> -&gt; <code>grpc call</code> -&gt; <code>PadLocalServer</code></p><p>在 wechaty 的 start 流程中，通过底层依赖的层层调用，最终初始化请求，会变成一个 LoginRequest 通过 grpc 的方式发送至 PadLocalServer。</p><p><strong>第二条从下往上的 事件响应:</strong></p><p><code>_onServerMessage</code> -&gt; <code>onQrCodeEvent</code> -&gt; <code>PuppetPadLocal.emit('scan', {qrcode})</code> -&gt; <code>wechaty.emit('scan')</code> -&gt; <code>QRCode</code></p><p>grpcClient 在接收到 PadLocalServer 的响应后，通过回调 及 事件订阅的方式，向上层逐级抛出 scan 事件，我们的应用层就拿到了登录二维码。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="完整的登录流程">完整的登录流程<a href="#完整的登录流程" class="hash-link" aria-label="完整的登录流程的直接链接" title="完整的登录流程的直接链接">​</a></h2><p>以上的流程介绍中，我们提到通过 <code>wechaty.start</code> 的方法调用 及 <code>wechaty.on('scan')</code> 方法监听，可以拿到了一个 QRCode，我们使用手机扫码即可完成登录。</p><p>我们只发了一个 <code>LoginRequest</code> 的请求，响应是拿到的是一个 二维码。一个请求一个响应，理论上一次方法调用就结束了，那上层的 <code>login</code> 的事件，又是通过什么机制触发的呢？</p><p>答案应该就是 gRPC, 笔者没有使用过 gRPC, 但在 PadLocal 作者的文章中，他提到 gRPC 具备双向通信机制，再结合这几处的源码</p><ul><li><a href="https://github.com/padlocal/padlocal-client-ts/blob/7ba679d78d13aeacb67969f0d817dbabf64f9c36/src/PadLocalClientApi.ts#L24-L54" target="_blank" rel="noopener noreferrer">PadLocalClientApi.login</a></li><li><a href="https://github.com/padlocal/padlocal-client-ts/blob/7ba679d78d13aeacb67969f0d817dbabf64f9c36/src/Request.ts#L233" target="_blank" rel="noopener noreferrer">Request.<!-- -->_<!-- -->onServerMessage</a></li><li><a href="https://github.com/padlocal/padlocal-client-ts/blob/7ba679d78d13aeacb67969f0d817dbabf64f9c36/src/Request.ts#L214" target="_blank" rel="noopener noreferrer">Request.<!-- -->_<!-- -->completePendingRequest</a></li></ul><p>笔者大胆猜测: 在发起 LoginRequest 的 gRPC 请求后，PadLocal 服务端会根据登录状态，持续向 Client 端响应消息，触发 Client 中的 登录相关的几个事件回调如 <code>onQrCodeEvent</code>、<code>onLoginStart</code>、
<code>onLoginSuccess</code>，并会控制 Client 端 与 Wechat Server 完成长连接的建立。等到这些初始化都完成后，才会通过 gRPC 响应头中的 ack 字段，来结束这次 LoginRequest 的 gRPC 请求。</p><p>由于发起 LoginRequest 后，可能需要做长时间等待(如等待用户扫码)、并控制 Client 端与 Wechat Server 建立长连接，所以这个 gRPC 的超时等待时间也非常的长，有 10 分钟之久。</p><div class="language-ts codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-ts codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">// 10 min timeout</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> request </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">client</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">createRequest</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  requestTimeout</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">10</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">60</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1000</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>用一张图来简要示意下，完整的 LoginRequest gRPC 调用流程:</p><p><img loading="lazy" alt="image" src="/assets/images/login-c0225ecd154d796ef52d949dff82a8f7.webp" width="1800" height="741" class="img_ev3q"></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="消息发送">消息发送<a href="#消息发送" class="hash-link" aria-label="消息发送的直接链接" title="消息发送的直接链接">​</a></h2><p>在通过 Wechaty SDK 发送文字消息时，如上述的 <code>wechat.start()</code> 调用流程一样，会经过以下层级调用发送至 PadLocalServer</p><p><code>contact.say('text message')</code> -&gt; <code>PuppetPadLocal.messageSendText(toUserName,'text message')</code> -&gt; <code>client.api.sendTextMessage(toUserName,'text message')</code> -&gt; <code>client.request(pb.SendTextMessageRequest)</code> -&gt; <code>grpc call</code> -&gt; <code>PadLocalServer</code></p><p>PadLocalServer 端应该会根据 Client 的请求类型 SendTextMessageRequest， 在 gRPC 的响应里，指示 Client 需要通过 长连接将 textMessage 发送给 WechatyServer。</p><p>而所有通过长连接发送给 wechatyServer 的数据，都需要再一次 通过 gRPC 将请求内容进行包装(可能是用破解的微信加密算法进行处理)。再将包装后的数据，传输给 wechatyServer。</p><p>见以下示意图:</p><p><img loading="lazy" alt="消息发送示意图" src="/assets/images/send-msg-899846ecefecce6501bcea8b2a25b0d4.webp" width="956" height="574" class="img_ev3q"></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="消息推送">消息推送<a href="#消息推送" class="hash-link" aria-label="消息推送的直接链接" title="消息推送的直接链接">​</a></h3><p>由于 Client 通过长连接与 WechatyServer 进行连接，微信的消息，会直接到达 Client 端，但 Client 端需要通过 gRPC 请求，将消息的内容做 unpack 处理(可能是用解密算法)。然后根据消息的类型，emit 到上层中，完成消息的接收。</p><p><img loading="lazy" alt="消息推送示意图" src="/assets/images/receive-msg-7e92130e5db53c908422ea9f4170b608.webp" width="802" height="660" class="img_ev3q"></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="问题解答">问题解答<a href="#问题解答" class="hash-link" aria-label="问题解答的直接链接" title="问题解答的直接链接">​</a></h2><p>最后我们来看下一开始提到的几个问题:</p><ul><li>PadLocal、PadLocalServer 在 Wechaty 整体架构中主要扮演什么角色？</li><li>有哪些类型的请求需要通过 grpc 的方式与 PadLocalServer 通信？</li><li>到底有没有一个真实的 ipad 设备，在登录着微信账号？</li></ul><blockquote><p>PadLocal、PadLocalServer 在 Wechaty 整体架构中主要扮演什么角色？</p></blockquote><p>PadLocal 在整体架构中扮演一个 微信 iPad 端代理的角色，他会与 Wechat Server 建立长连接，进行收发消息操作。但 Wechaty SDK 在 PadLocal 上的所有主动方法调用，都需要先 通过 gRPC 的方式，请求到 PadLocalServer， 在收到 PadLocalServer 的响应指示后， PadLocal 才知道如何进行后续的操作处理(通过 长/短 连接，或是 HTTP 请求 微信服务端)。并且所有的 消息的发送、接收 的加解密处理，都需要通过 PadLocalServer 进行。</p><blockquote><p>有哪些类型的请求需要通过 gRPC 的方式与 PadLocalServer 通信？</p></blockquote><p>Wechaty SDK 上的所有主动方法调用，都会变成 client.api 的方法调用，最后变成 gRPC 请求到 PadLocalServer。再根据 gRPC 的响应指示，与 Wechat Server 进行交互。</p><blockquote><p>到底有没有一个真实的 ipad 设备，在登录着微信账号？</p></blockquote><p>其实笔者通过粗浅的学习，也还不能确定 PadLocalServer 后面是否连接着真实的 ipad 设备，笔者只能根据 PadLocal 作者的文章 及 设备成本 等猜测，PadLocal 作者应该是完全破解了 微信 ipad 端 API，然后模拟出了一个 ipad 设备。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="总结">总结<a href="#总结" class="hash-link" aria-label="总结的直接链接" title="总结的直接链接">​</a></h2><p>本篇文章简单、粗浅地梳理了 PadLocal 的登录、消息收发流程。PadLocal 中的许多实现，笔者没有亲自实践过，只能根据看到的源代码进行推测，希望能借着这篇文章与感兴趣的开发者有所交流，并期待社区中有更多 PadLocal 相关的内部原理性文章产出，帮助我们学习 Wechaty 生态。</p>]]></content>
        <author>
            <name>kkdev163</name>
            <uri>https://kkdev163.github.io</uri>
        </author>
        <category label="wechaty、padlocal、typescript" term="wechaty、padlocal、typescript"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Wechaty-微信群机器人-读经助手]]></title>
        <id>https://kkdev163.github.io/blog/wechaty-bible-robot</id>
        <link href="https://kkdev163.github.io/blog/wechaty-bible-robot"/>
        <updated>2021-05-02T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[本文首发于 Wechaty 社区]]></summary>
        <content type="html"><![CDATA[<blockquote><p>本文首发于 <a href="https://wechaty.js.org/2021/05/02/wechaty-bible-chatbot/" target="_blank" rel="noopener noreferrer">Wechaty 社区</a></p></blockquote><h2 class="anchor anchorWithStickyNavbar_LWe7" id="一前言">一、前言<a href="#一前言" class="hash-link" aria-label="一、前言的直接链接" title="一、前言的直接链接">​</a></h2><p>笔者将从 开发意图、产品功能特性、技术方案、心得体会 等方面回顾总结 微信群机器人-读经助手 的产品开发历程，希望对其他开发者有所帮助。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="二开发意图">二、开发意图<a href="#二开发意图" class="hash-link" aria-label="二、开发意图的直接链接" title="二、开发意图的直接链接">​</a></h2><p>笔者是一名基督徒微信群的成员，群里需要人工每天定时发送「文章」链接，并统计群成员「已读」人数。最早我们采取的方案是人工定时发送，群成员到 在线协同工具 如「石墨文档」手动填写「已读」。该方案虽然节省了统计人数的工作量，但依然有几个缺点：</p><ul><li>群成员年龄分布广，包含 60、70 岁成员，让他们跳转至第三方应用手动填写，操作成本高，导致打卡率低。</li><li>在群里直接文字打卡，可激励其他成员，而跳转至第三方应用打卡，就减弱了这个互动性。</li><li>每天人工定时发送，长期来看对发送人员是个不小的挑战。</li></ul><p>所以希望能够开发一个 微信机器人-读经助手 帮助实现如下功能：</p><ul><li>定时在微信群中发送文章链接</li><li>基于群成员的聊天信息(已读、完成) 等，自动进行统计打卡</li></ul><p>感谢 <a href="https://wechaty.js.org/" target="_blank" rel="noopener noreferrer">Wechaty</a> ，基于 Wechaty SDK，笔者通过一个晚上，就实现了 读经助手 的上述核心诉求，从此解放双手。目前 读经助手 在投入到 6 个微信群中使用，最长服务时长达 2 个月，服务人数 200+。(不敢主动推广，原因后面会讲)</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="三产品功能特性">三、产品功能特性<a href="#三产品功能特性" class="hash-link" aria-label="三、产品功能特性的直接链接" title="三、产品功能特性的直接链接">​</a></h2><p>核心功能仅用了一个晚上就实现了，但笔者大概花了 一个月(代码量 3000 行左右 ts 代码) 的时间来丰富 读经助手 的周边功能。完整功能大致分为以下几类：</p><ul><li>定时文章推送 (支持了多种基督教刊物)</li><li>群成员打卡 (基于群成员聊天，统计打卡人数、汇总生成 excel 表格)</li><li>获取文章链接 (获取多种基督教刊物的在线链接)</li><li>搜索文章内容 (搜索基督教刊物的内容)</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="功能简介">功能简介<a href="#功能简介" class="hash-link" aria-label="功能简介的直接链接" title="功能简介的直接链接">​</a></h3><p><img loading="lazy" alt="image" src="/assets/images/03-01-19c3ebf7b7e83a24c23b8ea3166eca43.webp" width="1168" height="288" class="img_ev3q"></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="更多功能">更多功能<a href="#更多功能" class="hash-link" aria-label="更多功能的直接链接" title="更多功能的直接链接">​</a></h3><p><img loading="lazy" alt="image" src="/assets/images/03-02-2dd35c589304371a331b5bdd5af8e124.webp" width="1874" height="622" class="img_ev3q"></p><p><a target="_blank" href="/assets/files/03-03-2a7fbe212f0b20f09dc75d5f97819a7f.webp">更多功能长图</a></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="文章推送">文章推送<a href="#文章推送" class="hash-link" aria-label="文章推送的直接链接" title="文章推送的直接链接">​</a></h3><p><img loading="lazy" alt="image" src="/assets/images/03-04-ff7ea506c363ee645e6e611c446fbc2e.webp" width="1628" height="520" class="img_ev3q"></p><p><img loading="lazy" alt="image" src="/assets/images/03-05-3d083f83baf514250f7a35cce48bad3c.webp" width="1000" height="547" class="img_ev3q"></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="打卡统计">打卡统计<a href="#打卡统计" class="hash-link" aria-label="打卡统计的直接链接" title="打卡统计的直接链接">​</a></h3><p><img loading="lazy" alt="image" src="/assets/images/03-06-0de8c007cc291e9bc8aa42d4b1e1aa7f.webp" width="1706" height="1104" class="img_ev3q"></p><p><img loading="lazy" alt="image" src="/assets/images/03-07-654488a1a01420bc77e733f367757e5c.webp" width="1220" height="234" class="img_ev3q"></p><p><img loading="lazy" alt="image" src="/assets/images/03-08-55e745d6a926aa837bd2f2819385a0f5.webp" width="1302" height="452" class="img_ev3q"></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="搜文章内容">搜文章内容<a href="#搜文章内容" class="hash-link" aria-label="搜文章内容的直接链接" title="搜文章内容的直接链接">​</a></h3><p><img loading="lazy" alt="image" src="/assets/images/03-09-9837c6fc9cca9db1b027e601a6ccee32.webp" width="1444" height="672" class="img_ev3q"></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="四技术实现">四、技术实现<a href="#四技术实现" class="hash-link" aria-label="四、技术实现的直接链接" title="四、技术实现的直接链接">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="wechaty">Wechaty<a href="#wechaty" class="hash-link" aria-label="Wechaty的直接链接" title="Wechaty的直接链接">​</a></h3><p>目前来看，上手成本最低的应该是只用 <a href="https://wechaty.js.org/docs/puppet-services/" target="_blank" rel="noopener noreferrer">puppet-services</a>，我使用的 token 提供商是 <a href="https://wechaty.js.org/docs/puppet-services/paimon" target="_blank" rel="noopener noreferrer">Paimon</a>, 注册手机号，即可获取 7 天 token。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="部署方案">部署方案<a href="#部署方案" class="hash-link" aria-label="部署方案的直接链接" title="部署方案的直接链接">​</a></h3><p>一共经历了如下几个部署方案：</p><ul><li><ol><li>闲置电脑部署 wechaty 应用 +  数据库(AWS dynamodb 香港节点)，使用 dynamodb 是因为这是亚马逊云的免费数据库产品，想白嫖。</li></ol></li><li><ol start="2"><li> 阿里云轻量应用服务器(1C 2G 40G-SSD 杭州节点) 部署 wechaty 应用 +  数据库(AWS dynamodb 香港节点)， 阿里云服务器是 98 元每年(新用户活动价)，可连续买三年。但阿里云杭州节点 连 亚马逊香港节点，延迟有时候会有 几十秒。尝试过阿里云香港节点，数据库请求是快了，但发送给 puppet-services 的请求有时会有几秒的延迟。</li></ol></li><li><ol start="3"><li>阿里云部署 wechaty 应用 + 数据库换成服务器自带的 mongodb。 这样访问 puppet-services、数据库都非常快。 由于两种数据库都是文档型，迁移的成本还不算太高，大概花了一天时间做数据库迁移+适配层代码。</li></ol></li></ul><p>由于需要做内容搜索，所以也在阿里云服务器上部署了 ElasticSearch。阿里云 98 一年真香。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="实现思路">实现思路<a href="#实现思路" class="hash-link" aria-label="实现思路的直接链接" title="实现思路的直接链接">​</a></h3><p>代码开源在该<a href="https://github.com/kkdev163/wechaty-bible-robot" target="_blank" rel="noopener noreferrer">仓库</a>，感兴趣的可以参考下，本节主要介绍下目录结构</p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">├── README.md</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">├── deploy.sh  部署脚本</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">├── dev.sh  开发环境脚本</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">├── ecosystem.config.js pm2进程管理配置</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">├── nodemon.json 本地开发配置</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">├── package-lock.json</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">├── package.json</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">├── prod.sh 生产环境脚本</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">├── server</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│&nbsp;&nbsp; ├── index.ts  wechaty 主入口</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│&nbsp;&nbsp; └── src</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│&nbsp;&nbsp;     ├── actions  actions 命令的实现</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│&nbsp;&nbsp;     │&nbsp;&nbsp; ├── _7cthSchedule.ts</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│&nbsp;&nbsp;     │&nbsp;&nbsp; ├── bibleSchedule.ts</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│&nbsp;&nbsp;     │&nbsp;&nbsp; ├── commit.ts</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│&nbsp;&nbsp;     │&nbsp;&nbsp; ├── index.ts</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│&nbsp;&nbsp;     │&nbsp;&nbsp; ├── pushSchedule.ts</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│&nbsp;&nbsp;     │&nbsp;&nbsp; ├── remind.ts</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│&nbsp;&nbsp;     │&nbsp;&nbsp; ├── search.ts</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│&nbsp;&nbsp;     │&nbsp;&nbsp; ├── smdjSchedule.ts</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│&nbsp;&nbsp;     │&nbsp;&nbsp; └── static.ts</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│&nbsp;&nbsp;     ├── bible  圣经相关的资源</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│&nbsp;&nbsp;     │&nbsp;&nbsp; ├── _7cth.ts</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│&nbsp;&nbsp;     │&nbsp;&nbsp; ├── plan.ts</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│&nbsp;&nbsp;     │&nbsp;&nbsp; ├── shareRes.ts</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│&nbsp;&nbsp;     │&nbsp;&nbsp; └── smdj.ts</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│&nbsp;&nbsp;     ├── constants.ts</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│&nbsp;&nbsp;     ├── controller 放开 http 服务的控制器</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│&nbsp;&nbsp;     │&nbsp;&nbsp; ├── index.ts</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│&nbsp;&nbsp;     │&nbsp;&nbsp; ├── proxy.ts</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│&nbsp;&nbsp;     │&nbsp;&nbsp; ├── search.ts</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│&nbsp;&nbsp;     │&nbsp;&nbsp; ├── setting.ts</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│&nbsp;&nbsp;     │&nbsp;&nbsp; └── utils.ts</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│&nbsp;&nbsp;     ├── ddb 数据库相关</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│&nbsp;&nbsp;     │&nbsp;&nbsp; ├── commands</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│&nbsp;&nbsp;     │&nbsp;&nbsp; ├── index.ts</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│&nbsp;&nbsp;     │&nbsp;&nbsp; ├── mongoDb.ts</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│&nbsp;&nbsp;     │&nbsp;&nbsp; ├── schema.ts</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│&nbsp;&nbsp;     │&nbsp;&nbsp; ├── script</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│&nbsp;&nbsp;     │&nbsp;&nbsp; └── syncModels.ts</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│&nbsp;&nbsp;     ├── handleMessage.ts 消息处理</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│&nbsp;&nbsp;     ├── http.ts http 服务器入口</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│&nbsp;&nbsp;     ├── interface</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│&nbsp;&nbsp;     │&nbsp;&nbsp; └── index.ts</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│&nbsp;&nbsp;     ├── schedule.ts 定时任务入口</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│&nbsp;&nbsp;     ├── </span><span class="token function" style="color:#d73a49">service</span><span class="token plain"> http 服务对应的 </span><span class="token function" style="color:#d73a49">service</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│&nbsp;&nbsp;     │&nbsp;&nbsp; ├── esClient.ts</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│&nbsp;&nbsp;     │&nbsp;&nbsp; ├── search.ts</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│&nbsp;&nbsp;     │&nbsp;&nbsp; └── setting.ts</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│&nbsp;&nbsp;     └── util 工具函数库</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│&nbsp;&nbsp;         ├── bibleData.json</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│&nbsp;&nbsp;         ├── bibleUtils.ts</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│&nbsp;&nbsp;         ├── canvas.html</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│&nbsp;&nbsp;         ├── devUtils.ts</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│&nbsp;&nbsp;         ├── drawBible.html</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│&nbsp;&nbsp;         ├── drawUtils.ts</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│&nbsp;&nbsp;         ├── formatUtils.ts</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│&nbsp;&nbsp;         ├── index.ts</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│&nbsp;&nbsp;         ├── smdj-es-doc</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│&nbsp;&nbsp;         ├── smdjStats</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│&nbsp;&nbsp;         ├── smdjUtils.ts</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│&nbsp;&nbsp;         ├── songUtils.ts</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│&nbsp;&nbsp;         ├── timeUtils.ts</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">│&nbsp;&nbsp;         └── wxUtils.ts</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="五心得体会">五、心得体会<a href="#五心得体会" class="hash-link" aria-label="五、心得体会的直接链接" title="五、心得体会的直接链接">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="第一次为自己写代码">第一次为自己写代码<a href="#第一次为自己写代码" class="hash-link" aria-label="第一次为自己写代码的直接链接" title="第一次为自己写代码的直接链接">​</a></h3><p> 笔者之前大部分写的代码都是为了学习、工作(赚钱)。这次是 为了解放自己的双手、便利身边朋友 而写代码，心态从赚钱变成了奉献。发现自己又重新找回了，写程序的激情 和 热情，在开发读经机器人期间，有好几次通宵的经历，而且功能上线后，及时的反馈 和自我满足感是很让人愉悦的。</p><p>这也让我意识到，写代码不仅仅是一种工作，而确确实实是一项实用的生活技能、特长。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="微信侧风险">微信侧风险<a href="#微信侧风险" class="hash-link" aria-label="微信侧风险的直接链接" title="微信侧风险的直接链接">​</a></h3><p>开发阶段，有次把机器人号，从测试群中主动踢出，发现 Provider Service 抛出了一个 Error，为了复现这个异常，我重复多次把这个号从测试群中踢出。然后过了一段时间，就收到了 微信风控通知，提示该号被 多人投诉、有骚扰用户的行为。 所以大家尽量不要将 机器人踢出群，最好采用主动退出的方式，以免被微信风控。</p><p>换了新的微信号后，大概服务了 2 个月不到，发现被微信主动踢下线了，再次登录提示使用了 微信外挂、非官方客户端或模拟器。不清楚是, provider service 的方案，被大批检测出，还是仅仅是 笔者的微信号，被投诉导致。。
<img loading="lazy" alt="image" src="/assets/images/04-01-a2c8b8d2f3a5d0efacb7135bc7b23311.webp" width="1080" height="2412" class="img_ev3q"></p><p>笔者开发机器人的初衷是希望解放人力，其实越多的微信群使用(免费使用)，对我来说，开发机器人的价值越高。但由于存在微信封号风险，是目前笔者不敢主动推广，仅靠群成员的口口相传。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="2-8-原则">2 8 原则<a href="#2-8-原则" class="hash-link" aria-label="2 8 原则的直接链接" title="2 8 原则的直接链接">​</a></h3><p>如上文提到的核心功能，笔者 1 个晚上就实现了，剩下的时间都在丰富七七八八的周边功能。但说实话，这些周边功能，都是我个人在使用，频率非常低，但却占据了我整体开发的 80% 以上时间。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="交互友好性">交互友好性<a href="#交互友好性" class="hash-link" aria-label="交互友好性的直接链接" title="交互友好性的直接链接">​</a></h3><p>由于读经机器人有部分功能是需要输出长段的文字，考虑到阅读的友好性，防止老年机大段文字刷屏，读经机器人使用了 node-canvas 渲染引擎，并实现了简单的文字排版，将大段文字通过图片的方式发送给用户。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="便利性与通用性">便利性与通用性<a href="#便利性与通用性" class="hash-link" aria-label="便利性与通用性的直接链接" title="便利性与通用性的直接链接">​</a></h3><p>为了使功能更加通用性，部分功能的开发，常常是站在程序员的视角出发，提供出多个参数化的配置，但这却加大了使用者的认知成本。比如 读经助手 提供了如下命令</p><p><code>@读经助手  创建读经计划 创世记1~玛拉基书4 90天</code></p><p>该命令中包含了如下几个参数「起始书卷、起始章节、结束书卷、结束章节、阅读天数」，更便利的做法是包装成如下指令</p><p><code>@读经助手 创建读经计划 旧约 90天</code></p><p>另外笔者还尝试过开发了一个 H5 页面，当群成员输入</p><p><code>@读经助手 群设置</code></p><p>返回该群设置的 H5 页面链接，这样通过 H5 页面的方式进行配置，虽然可以方便使用者。但同时也引入了安全性问题：任意一名群成员都能打开 H5 页面，他可以随意 删除、改变 群配置。如果要防止该问题，就需要额外开发 登录、鉴权。相比而言，使用群聊输入命令，是处于 全群监督下，不会有人进行乱操作。。所以虽然开发了 H5 设置页面，但没有对用户开发。</p>]]></content>
        <author>
            <name>kkdev163</name>
            <uri>https://kkdev163.github.io</uri>
        </author>
        <category label="wechaty、robot" term="wechaty、robot"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[ES(ElasticSearch) 搜索基本概念简介]]></title>
        <id>https://kkdev163.github.io/blog/elasticsearch-basic</id>
        <link href="https://kkdev163.github.io/blog/elasticsearch-basic"/>
        <updated>2020-04-02T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[本篇文章介绍了 ES(ElasticSearch) 搜索相关的基本概念]]></summary>
        <content type="html"><![CDATA[<p>本篇文章介绍了 ES(ElasticSearch) 搜索相关的基本概念</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="es-的存储类型">ES 的存储类型<a href="#es-的存储类型" class="hash-link" aria-label="ES 的存储类型的直接链接" title="ES 的存储类型的直接链接">​</a></h3><p>ES 的存储类型大致分为两类</p><ul><li>结构化数据 类型为 keyword、date、long、boolean 等</li><li>文本数据 类型为 text</li></ul><p>存储索引建立规则：</p><ul><li>ES 在存储结构化数据类型时，会将数据作为一个整体建立倒排索引。</li><li>ES 在存储文本数据类型时，会将文本先进行分词处理，然后按各个单独的词项建立倒排索引。</li></ul><p>举例来说：</p><p>假设索引字段的定义如下：</p><table><thead><tr><th>字段名</th><th>字段类型</th></tr></thead><tbody><tr><td>appName</td><td>keyword</td></tr><tr><td>description</td><td>text</td></tr></tbody></table><p>当插入以下两条数据时</p><table><thead><tr><th>id</th><th>appName</th><th>description</th></tr></thead><tbody><tr><td>1</td><td>App Store</td><td>App Store is Awesome</td></tr><tr><td>2</td><td>Apple Store</td><td>Store Sell Apple Pie</td></tr></tbody></table><p>ES 会为 appName 字段建立如下的倒排索引：</p><table><thead><tr><th>索引</th><th>文档 id</th></tr></thead><tbody><tr><td>App Store</td><td>1</td></tr><tr><td>Apple Store</td><td>2</td></tr></tbody></table><p>ES 会为 description 字段建立如下的倒排索引：</p><table><thead><tr><th>索引</th><th>文档 id</th></tr></thead><tbody><tr><td>app</td><td>1</td></tr><tr><td>store</td><td>1, 2</td></tr><tr><td>awesome</td><td>1</td></tr><tr><td>sell</td><td>2</td></tr><tr><td>apple</td><td>2</td></tr><tr><td>pie</td><td>2</td></tr></tbody></table><p>注：通用分词器会将词项转为小写</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="es-的搜索">ES 的搜索<a href="#es-的搜索" class="hash-link" aria-label="ES 的搜索的直接链接" title="ES 的搜索的直接链接">​</a></h3><p>ES 的搜索分为两大类</p><ul><li>基于词项的搜索(Term 搜索)</li><li>基于全文的搜索</li></ul><h4 class="anchor anchorWithStickyNavbar_LWe7" id="基于词项的搜索">基于词项的搜索<a href="#基于词项的搜索" class="hash-link" aria-label="基于词项的搜索的直接链接" title="基于词项的搜索的直接链接">​</a></h4><p>在进行基于词项的搜索，搜索词 与 文档字段需完全匹配。</p><p>ES 提供了五种基于词项的搜索方法</p><ul><li>term</li><li>range</li><li>exists</li><li>prefix</li><li>wildcard</li></ul><h5 class="anchor anchorWithStickyNavbar_LWe7" id="demo-举例">DEMO 举例<a href="#demo-举例" class="hash-link" aria-label="DEMO 举例的直接链接" title="DEMO 举例的直接链接">​</a></h5><table><thead><tr><th>id</th><th>appName</th><th>description</th></tr></thead><tbody><tr><td>1</td><td>App Store</td><td>App Store is Awesome</td></tr><tr><td>2</td><td>Apple Store</td><td>Store Sell Apple Pie</td></tr></tbody></table><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "query": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        "term": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            "appName": "App Store" // 可搜索到</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            // "appName": "App"  // 无法搜索到</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h4 class="anchor anchorWithStickyNavbar_LWe7" id="基于全文的搜索">基于全文的搜索<a href="#基于全文的搜索" class="hash-link" aria-label="基于全文的搜索的直接链接" title="基于全文的搜索的直接链接">​</a></h4><p>ES 主要提供了两种基于全文的搜索方法</p><ul><li>match</li><li>match_phrase</li></ul><p>在进行 match 搜索时，ES 会先将查询字符串进行分词，然后将每个词项与倒排索引进行匹配，任意一个词项匹配到，即搜索成功。</p><p>在进行 match_phrase 搜索时，ES 将查询字符串看作一个整体，只有文档中包含该短语字符串时，才搜索成功。</p><h5 class="anchor anchorWithStickyNavbar_LWe7" id="demo">DEMO<a href="#demo" class="hash-link" aria-label="DEMO的直接链接" title="DEMO的直接链接">​</a></h5><table><thead><tr><th>id</th><th>appName</th><th>description</th></tr></thead><tbody><tr><td>1</td><td>App Store</td><td>App Store is Awesome</td></tr><tr><td>2</td><td>Apple Store</td><td>Store Sell Apple Pie</td></tr></tbody></table><p>ES 会为 description 字段建立如下的倒排索引：</p><table><thead><tr><th>索引</th><th>文档 id</th></tr></thead><tbody><tr><td>app</td><td>1</td></tr><tr><td>store</td><td>1, 2</td></tr><tr><td>awesome</td><td>1</td></tr><tr><td>sell</td><td>2</td></tr><tr><td>apple</td><td>2</td></tr><tr><td>pie</td><td>2</td></tr></tbody></table><h6 class="anchor anchorWithStickyNavbar_LWe7" id="match-举例">match 举例<a href="#match-举例" class="hash-link" aria-label="match 举例的直接链接" title="match 举例的直接链接">​</a></h6><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "query": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        "match": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            "description": "App" // 可以搜到文档1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          //"description": "App Store"  // 可以搜索到文档1，2 (会先将App Store分词, 通过 Store 搜到了文档2)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          //"description": "App Awesome"  // 可以搜索到文档1 (还是进行了分词)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h5 class="anchor anchorWithStickyNavbar_LWe7" id="match_phrase-举例">match_phrase 举例<a href="#match_phrase-举例" class="hash-link" aria-label="match_phrase 举例的直接链接" title="match_phrase 举例的直接链接">​</a></h5><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "query": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        "match_phrase": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            "description": "App" // 搜到文档1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          //"description": "App Store"  // 搜索文档1 (App Store是一个整体)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          //"description": "App Awesome"  // 无法查到 (App Awesome是一个整体)</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="复合查询">复合查询<a href="#复合查询" class="hash-link" aria-label="复合查询的直接链接" title="复合查询的直接链接">​</a></h3><p>以上为单条件查询，但通常业务上需要基于多个条件进行查询，ES 提供了 bool 复合查询，该查询可以包含 4 个查询字句，分别是</p><ul><li>must 必须全部符合该条件。贡献算分(算分可以简单理解为搜索的匹配度)</li><li>should 符合条件之一即可。 贡献算分</li><li>must_not 必须不符合该条件。 不贡献算分，有缓存优化</li><li>filter 必须符合该条件。不贡献算分，有缓存优化</li></ul><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "query": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        "bool": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            "must": [{  // 复合查询子句</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "term": {  // 基于词项搜索</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    "appName": "App Store"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            }, {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "range": { // 基于词项的范围搜索</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    "time": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        "lgt": "2019-01-01"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            }, {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "wildcard": { // 基于词项的通配符搜索</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    "appName": "* Store"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            }, {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "match": { // 基于全文的 match 搜索</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    "description": "App Store"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            }, {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "match_phrase": { // 基于全文的 match_phrase 搜索</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    "description": "App Store"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            }]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            "should": [{  // 复合查询子句</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                ...</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            }],</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            "must_not": [{ // 复合查询子句</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                ...</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            }],</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            "filter": [{ // 复合查询子句</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                ...</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            }]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>一般情况下，在不需要算分的场景下，建议使用 filter 和 must_not, 因为不需要进行算分，ES 会有缓存优化。</p><p>另外每一个查询字句，可以继续嵌套 bool 查询。示意如下:</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "query": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        "bool": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            "must": [{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "bool": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    "must":{...},</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    "should": {...},</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            }]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>由于复合查询的 body 构造较为繁复，我们可以使用 <a href="https://github.com/danpaz/bodybuilder" target="_blank" rel="noopener noreferrer">bodybuilder</a> 来简化这一过程。</p><p>示意如下：</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">var body = bodybuilder().query('match', 'message', 'this is a test').build()</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">// body == {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">//   query: {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">//     match: {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">//       message: 'this is a test'</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">//     }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">//   }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">// }</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>详细<a href="https://bodybuilder.js.org/docs/" target="_blank" rel="noopener noreferrer">API 文档</a></p>]]></content>
        <author>
            <name>kkdev163</name>
            <uri>https://kkdev163.github.io</uri>
        </author>
        <category label="搜索" term="搜索"/>
        <category label="ES" term="ES"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Lighthous 测试内幕]]></title>
        <id>https://kkdev163.github.io/blog/lighthouse</id>
        <link href="https://kkdev163.github.io/blog/lighthouse"/>
        <updated>2019-11-12T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[前言]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="前言">前言<a href="#前言" class="hash-link" aria-label="前言的直接链接" title="前言的直接链接">​</a></h2><p>云音乐前端性能监控平台，底层使用了 Lighthouse 进行审计评分，在实践过程中我们积累了一些 Lighthouse 内部实现的研究经验，希望通过这篇文章可以分享给各位读者。</p><p>本篇文章基于 Lighthouse 5.2.0 版本，介绍了 Lighthouse 的测试流程、架构模块实现、性能指标的计算等。通过这篇文章，读者可以了解到 Lighthouse 是如何做自动化测试的、如何在 Lighthouse 的框架上自定义一些审计项、关键的性能指标是如何模拟计算的。</p><p>本篇文章会按以下四个部分展开：</p><ul><li>Lighthouse 简介</li><li>Lighthouse 测试流程</li><li>Lighthouse 模块实现</li><li>Lighthouse 性能指标计算</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="lighthouse-简介">Lighthouse 简介<a href="#lighthouse-简介" class="hash-link" aria-label="Lighthouse 简介的直接链接" title="Lighthouse 简介的直接链接">​</a></h2><p>Lighthouse 是一个开源的自动化工具，用于改进网络应用的质量。只要为 Lighthouse 提供一个需要审查的网址，它将针对此页面运行一连串的测试，然后生成一个有关页面性能的报告。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="lighthouse-使用方式">Lighthouse 使用方式<a href="#lighthouse-使用方式" class="hash-link" aria-label="Lighthouse 使用方式的直接链接" title="Lighthouse 使用方式的直接链接">​</a></h3><p>目前官方提供了 4 种使用方式：</p><ul><li><a href="https://github.com/GoogleChrome/lighthouse#using-lighthouse-in-chrome-devtools" target="_blank" rel="noopener noreferrer">Chrome 开发者工具（DevTools）</a></li><li><a href="https://github.com/GoogleChrome/lighthouse#using-the-chrome-extension" target="_blank" rel="noopener noreferrer">Chrome 扩展</a></li><li><a href="https://github.com/GoogleChrome/lighthouse#using-the-node-cli" target="_blank" rel="noopener noreferrer">Node CLI</a></li><li><a href="https://github.com/GoogleChrome/lighthouse#using-the-node-module" target="_blank" rel="noopener noreferrer">Node Module</a></li></ul><p>以 Chrome 开发者工具为例，在 Audits 面板下，用户可以配置测试平台、测试类目、限速方式等，可以方便快捷地发起一次测试。</p><p><img loading="lazy" src="https://p1.music.126.net/-zIauX-4uD9ZOETz8OGxaQ==/109951164295464779.png" alt="image" class="img_ev3q"></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="lighthouse-测试报告">Lighthouse 测试报告<a href="#lighthouse-测试报告" class="hash-link" aria-label="Lighthouse 测试报告的直接链接" title="Lighthouse 测试报告的直接链接">​</a></h3><p>测试结束后，默认会生成 HTML 格式的报告，如下图所示，在报告中涵盖了 5 大类别（categories）的测试评分：</p><p><img loading="lazy" src="https://p1.music.126.net/aT_f3Y0FFCaR78J39Y3hfA==/109951164463170217.png?imageView=1&amp;thumbnail=500x0" alt="image" class="img_ev3q"></p><p>每个类别都包含一系列的审计项（audit），针对审计项的运行结果，Lighthouse 会给出特定的优化建议与诊断结果帮助开发者有针对性地进行优化。</p><p>本节简要介绍了 Lighthouse 的使用方式与测试报告组成，下一节将介绍 Lighthouse 的测试流程。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="lighthouse-测试流程">Lighthouse 测试流程<a href="#lighthouse-测试流程" class="hash-link" aria-label="Lighthouse 测试流程的直接链接" title="Lighthouse 测试流程的直接链接">​</a></h2><p>我们以 Node CLI 的方式进行测试，分析 Lighthouse 的测试流程。</p><p>参考<a href="https://github.com/GoogleChrome/lighthouse#using-the-node-cli" target="_blank" rel="noopener noreferrer">官方文档</a>，安装好 CLI 后，输入如下命令，可以进行一次测试</p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">lighthouse --only-categories</span><span class="token operator" style="color:#393A34">=</span><span class="token plain">performance https://google.com</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><em>注：以上命令只进行 performance 类别测试。</em></p><p>在 CLI 中会输出测试过程中的日志，截图显示如下，在日志中，可以看出测试大致分为如下几个阶段：</p><p><img loading="lazy" src="https://p1.music.126.net/mqu093845jHPdnHDwxrfgg==/109951164463501007.png?imageView=1&amp;thumbnail=500x0" alt="image" class="img_ev3q"></p><p>通过输出的日志，可以画出 Lighthouse 的测试流程图：</p><p><img loading="lazy" src="https://p1.music.126.net/Wka60Xl1kip0rBD8bia5lg==/109951164295505995.png?imageView=1&amp;thumbnail=500x0" alt="image" class="img_ev3q"></p><ol><li>Lighthouse 与浏览器建立连接。</li><li>测试的初始化配置与加载待测试页面。</li><li>在页面加载过程中，运行一系列的采集器（gatherers），每个采集器都会收集自己的目标信息，并生成中间产物（artifacts）。</li><li>运行一系列的审计项（audits），每个审计项都会从中间产物（artifacts）中获取所需的数据，计算出各自的评分。</li><li>基于审计项的评分计算出大类的评分，汇总生成报告。</li></ol><p>本节基于 Lighthouse 的测试日志，介绍了 Lighthouse 的测试流程，下节将介绍流程中的模块实现。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="lighthouse-模块实现">Lighthouse 模块实现<a href="#lighthouse-模块实现" class="hash-link" aria-label="Lighthouse 模块实现的直接链接" title="Lighthouse 模块实现的直接链接">​</a></h2><p>初步了解了基本的测试流程后，我们再看下官方给出的 <a href="https://github.com/GoogleChrome/lighthouse/blob/master/docs/architecture.md" target="_blank" rel="noopener noreferrer">Lighthouse 架构图</a>：</p><p><img loading="lazy" src="https://p1.music.126.net/-A6wsG5KoXXe3-OS2XVeuQ==/109951164295515799.png?imageView=1&amp;thumbnail=500x0" alt="image" class="img_ev3q"></p><p>这张图中体现了测试的主要流程，从中也可以圈出 4 个主要模块，下文会对这几个模块做逐个讲解。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="driver-模块">Driver 模块<a href="#driver-模块" class="hash-link" aria-label="Driver 模块的直接链接" title="Driver 模块的直接链接">​</a></h3><h4 class="anchor anchorWithStickyNavbar_LWe7" id="双向通信与-devtools-协议">双向通信与 DevTools 协议<a href="#双向通信与-devtools-协议" class="hash-link" aria-label="双向通信与 DevTools 协议的直接链接" title="双向通信与 DevTools 协议的直接链接">​</a></h4><p>Chrome 浏览器在启动的时候，可以通过 <code>--remote-debugging-port</code> 参数设置远程调试端口，如以下命令可以打开 Chrome 并设置远程调试端口为 9222。</p><div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">chrome.exe --remote-debugging-port</span><span class="token operator" style="color:#393A34">=</span><span class="token number" style="color:#36acaa">9222</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>之后就可以使用地址 http://localhost:9222 进行远程调试了，比如以下命令可以让 Chrome 浏览器打开一个新的 Tab。</p><div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">curl</span><span class="token plain"> http://localhost:9222/json/new</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>该命令还会返回此 Tab 的相关信息，其中需要关注的是 webSocketDebuggerUrl，这是该 Tab 的 WebSocket 连接地址。</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "id": "29989D...",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "url": "about:blank",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "webSocketDebuggerUrl": "ws://localhost:9222/devtools/page/29989D...",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    ...</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Driver 模块持有 Connection 实例（负责与浏览器进行通信），该实例在初始化的时候，正是通过调用远程调试端口的<code>/json/new</code>指令打开一个新的 Tab，并使用返回的 webSocketDebuggerUrl 与浏览器建立 WebSocket 连接，之后就可以进行双向通信。</p><ol><li>新开一个 Tab</li></ol><p><img loading="lazy" src="https://p1.music.126.net/eaL2EXZEC08464rFBy9iaw==/109951164431973731.png?imageView=1&amp;thumbnail=500x0" alt="image" class="img_ev3q"></p><ol start="2"><li>建立 WebSocket 连接</li></ol><p><img loading="lazy" src="https://p1.music.126.net/-VHhyIsGazg4bYE5M6nEDQ==/109951164431978136.png?imageView=1&amp;thumbnail=500x0" alt="image" class="img_ev3q"></p><p>双方建立 WebSocket 连接后，必须使用一种数据格式协议进行通信，该协议就是 Chrome DevTools Protocol，此协议以 JSON 为格式，定义指令的方法名与参数。</p><p>如下图所示，发送 Page.navigate 指令可以让 Chrome 导航至目标页面。发送 Page.captureScreenshot 指令可以让 Chrome 生成当前页面的截图数据。</p><p><img loading="lazy" src="https://p1.music.126.net/5D-dM1H93qwmPbOpGHnfow==/109951164431993587.png?imageView=1&amp;thumbnail=500x0" alt="image" class="img_ev3q"></p><p>在该协议的<a href="https://chromedevtools.github.io/devtools-protocol/" target="_blank" rel="noopener noreferrer">文档</a>中，所有的控制指令和事件被划分至多个领域（Domains）如 Page、Network 等。打开 Page 领域，可以找到示例指令 Page.navigate 的详细说明：</p><p><img loading="lazy" src="https://p1.music.126.net/v1z_OCF1Z2Hea9M0cEClvA==/109951164431998671.png?imageView=1&amp;thumbnail=500x0" alt="image" class="img_ev3q"></p><p>除了 navigate、captureScreenshot 等主动调用的指令外，当我们调用某个领域的 enable 指令后，后续就可以接收到该领域推送的通知事件。</p><p>Lighthouse 通过 Chrome DevTools Protocol 定义的主动指令与事件通知，就实现了操控 Chrome 浏览器，和感知页面加载过程中的各个事件。</p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="日志记录">日志记录<a href="#日志记录" class="hash-link" aria-label="日志记录的直接链接" title="日志记录的直接链接">​</a></h4><p>Driver 模块中的另外 2 个重要实例是 DevtoolsLog、NetworkRecorder，他们用于将浏览器发出的通知事件进行结构化的存储。其中 DevtoolsLog 会记录各个领域的全量日志，NetworkRecorder 只存储网络相关日志，并会分析出当前网络请求状态（繁忙、空闲）等。</p><p><img loading="lazy" src="https://p1.music.126.net/78-QQu4e5FhQhAOyA-nERQ==/109951164432038402.png?imageView=1&amp;thumbnail=500x0" alt="image" class="img_ev3q"></p><p>存储的日志信息将在后续的审计（Audits）模块中使用，下文会继续提到他们。</p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="仿真器emulation">仿真器（emulation）<a href="#仿真器emulation" class="hash-link" aria-label="仿真器（emulation）的直接链接" title="仿真器（emulation）的直接链接">​</a></h4><p>Driver 模块中最后值得一提的部分是仿真器（emulation），该模块的作用是模拟测试设备，如模拟 移动端 / PC 端、屏幕的尺寸，模拟设备的 UserAgent、Cookie、网络限速等。</p><p>这些模拟功能的设置，也是通过 Connection 模块向 Chrome 浏览器发送对应领域的操控指令实现的。</p><p><img loading="lazy" src="https://p1.music.126.net/uEjOlxdk-Upp8CR-L0U9Qw==/109951164432060610.png?imageView=1&amp;thumbnail=500x0" alt="image" class="img_ev3q"></p><p>至此我们分析完了 Driver 模块的主要组成部分，我们来简单总结下：负责与浏览器的双向通信、记录事件日志、模拟器的设置等。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="gatherer-模块">Gatherer 模块<a href="#gatherer-模块" class="hash-link" aria-label="Gatherer 模块的直接链接" title="Gatherer 模块的直接链接">​</a></h3><p><img loading="lazy" src="https://p1.music.126.net/jbY5zCRtP6Fj3ilVh2ahqg==/109951164432067289.png?imageView=1&amp;thumbnail=500x0" alt="image" class="img_ev3q"></p><p>该模块的一个重要概念是 pass，官方是这样定义 pass 的：</p><blockquote><p>controls how to load the requested URL
and what information to gather about the page while loading.</p></blockquote><p>即控制页面如何加载，并决定在页面加载过程中采集哪些信息</p><blockquote><p>defines basic settings such as how long to wait for the page to load and whether to record a trace file. Additionally a list of gatherers to use is defined per pass. Gatherers can read information from the page to generate artifacts which are later used by audits to provide you with a Lighthouse report.</p></blockquote><p>即定义页面加载等待时间、是否记录 trace 文件等配置。每个 pass 还定义了一个 gatherers 列表，gatherers 可以从页面中读取需要的信息并生成一个中间产物，
中间产物将会用于后续的审计分析，并最终生成测试报告。</p><p>了解了 pass 的定义，来看一个具体的 pass 配置：</p><div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token literal-property property" style="color:#36acaa">passes</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token literal-property property" style="color:#36acaa">passName</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'defaultPass'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token literal-property property" style="color:#36acaa">recordTrace</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">true</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// 是否记录Trace信息</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token literal-property property" style="color:#36acaa">useThrottling</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">true</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// 是否使用限速</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token literal-property property" style="color:#36acaa">gatherers</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// gatherers列表</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token string" style="color:#e3116c">'css-usage'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token string" style="color:#e3116c">'viewport-dimensions'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token string" style="color:#e3116c">'runtime-exceptions'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token string" style="color:#e3116c">'console-messages'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token string" style="color:#e3116c">'anchor-elements'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token string" style="color:#e3116c">'image-elements'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token string" style="color:#e3116c">'link-elements'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token string" style="color:#e3116c">'meta-elements'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token string" style="color:#e3116c">'script-elements'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token string" style="color:#e3116c">'iframe-elements'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token spread operator" style="color:#393A34">...</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// 省略</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token spread operator" style="color:#393A34">...</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// 省略</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>其中的 gatherers 是我们需要关注的重点，每一个 gatherer，在代码仓库中都有与之对应的同名实现文件，并且都继承自相同的父类 Gatherer，其中定义了三个模板方法，子类只需实现关心的模板方法即可。</p><div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name">Gatherer</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// 在页面导航前</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function" style="color:#d73a49">beforePass</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">passContext</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// 在页面loaded后</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function" style="color:#d73a49">pass</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">passContext</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// 在页面加载完毕，且trace信息收集完毕后</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function" style="color:#d73a49">afterPass</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">passContext</span><span class="token parameter punctuation" style="color:#393A34">,</span><span class="token parameter"> loadData</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>以一个比较简单的 Gatherer 具体实现 RuntimeExceptions 为例，该实例实现了 beforePass 、afterPass 两个生命周期模板方法，其中 driver.on 正是通过上文介绍的 Driver 模块实现的事件监听。</p><div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> </span><span class="token maybe-class-name">Gatherer</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">require</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"./gatherer.js"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name">RuntimeExceptions</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">extends</span><span class="token plain"> </span><span class="token class-name">Gatherer</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function" style="color:#d73a49">constructor</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">super</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">_exceptions</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">_onRuntimeExceptionThrown</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">onRuntimeExceptionThrown</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">bind</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function" style="color:#d73a49">onRuntimeExceptionThrown</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">entry</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">_exceptions</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">push</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">entry</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// 在页面导航前，注册事件监听器，采集错误信息</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function" style="color:#d73a49">beforePass</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">passContext</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> driver </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> passContext</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">driver</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    driver</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">on</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"Runtime.exceptionThrown"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">_onRuntimeExceptionThrown</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// 在页面加载完毕后，解除事件监听</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">async</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">afterPass</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">passContext</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword control-flow" style="color:#00009f">await</span><span class="token plain"> passContext</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">driver</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">off</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token string" style="color:#e3116c">"Runtime.exceptionThrown"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">_onRuntimeExceptionThrown</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword control-flow" style="color:#00009f">return</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">this</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">_exceptions</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>有了这个参考示例，我们也可以轻松地写一个自定义的 Gatherer，比如用于采集页面标题的 gatherer：</p><div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> </span><span class="token maybe-class-name">Gatherer</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">require</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"./gatherer.js"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">getPageTitle</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword control-flow" style="color:#00009f">return</span><span class="token plain"> </span><span class="token dom variable" style="color:#36acaa">document</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">title</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name">PageTitle</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">extends</span><span class="token plain"> </span><span class="token class-name">Gatherer</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function" style="color:#d73a49">afterPass</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">passContext</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword control-flow" style="color:#00009f">return</span><span class="token plain"> passContext</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">driver</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">evaluateAsync</span><span class="token punctuation" style="color:#393A34">(</span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token template-string string" style="color:#e3116c">(</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">${</span><span class="token template-string interpolation">getPageTitle</span><span class="token template-string interpolation punctuation" style="color:#393A34">.</span><span class="token template-string interpolation method function property-access" style="color:#d73a49">toString</span><span class="token template-string interpolation punctuation" style="color:#393A34">(</span><span class="token template-string interpolation punctuation" style="color:#393A34">)</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">}</span><span class="token template-string string" style="color:#e3116c">())</span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>我们只重写了 afterPass 方法，在该生命中期中，将脚本通过 driver 模块发送给浏览器执行，并获取到执行结果。</p><p>当 pass 中定义的所有 gatherers 运行完后，就会生成一个中间产物 artifacts，此后 Lighthouse 就可以断开与浏览器的连接，只使用 artifacts 进行后续的分析。</p><p>总结下 Gatherer 模块，该模块会通过 pass 这个配置，定义页面如何加载，并运行配置的所有 gatherers 来采集页面加载过程中的信息，并生成中间产物 artifacts。有了 artifacts，就可以进入下一步的 Audits 模块。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="audits-模块">Audits 模块<a href="#audits-模块" class="hash-link" aria-label="Audits 模块的直接链接" title="Audits 模块的直接链接">​</a></h3><p>与 gatherers 类似，在配置文件中也会定义需要运行的 audits，每一个 audits 也都有与之对应的同名实现文件。</p><div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token literal-property property" style="color:#36acaa">audits</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token string" style="color:#e3116c">'errors-in-console'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token string" style="color:#e3116c">'metrics/first-contentful-paint'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token string" style="color:#e3116c">'metrics/first-meaningful-paint'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token string" style="color:#e3116c">'metrics/speed-index'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token string" style="color:#e3116c">'metrics/first-cpu-idle'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token string" style="color:#e3116c">'metrics/interactive'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token string" style="color:#e3116c">'screenshot-thumbnails'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token string" style="color:#e3116c">'final-screenshot'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// 省略</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// 省略</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>我们还是从最为简单的 errors-in-console 入手，了解下一个 audit 是如何实现的。</p><p>在每个 audit 中都会定义一个静态方法<code>meta()</code>，对该 audit 进行描述，并声明所需的 artifacts，ErrorLogs 这项 audit 就声明了其需要上文提到的 RuntimeExceptions 所生成的中间产物。</p><div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name">ErrorLogs</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">extends</span><span class="token plain"> </span><span class="token class-name">Audit</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">static</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">get</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">meta</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword control-flow" style="color:#00009f">return</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token literal-property property" style="color:#36acaa">id</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"errors-in-console"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token literal-property property" style="color:#36acaa">title</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">str_</span><span class="token punctuation" style="color:#393A34">(</span><span class="token maybe-class-name">UIStrings</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">title</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token literal-property property" style="color:#36acaa">failureTitle</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">str_</span><span class="token punctuation" style="color:#393A34">(</span><span class="token maybe-class-name">UIStrings</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">failureTitle</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token literal-property property" style="color:#36acaa">description</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">str_</span><span class="token punctuation" style="color:#393A34">(</span><span class="token maybe-class-name">UIStrings</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">description</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token literal-property property" style="color:#36acaa">requiredArtifacts</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">"ConsoleMessages"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"RuntimeExceptions"</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Audit 实例需要实现的另一个模板方法是<code>audit()</code>，在该方法中可以拿到所需的中间产物，并基于中间产物计算出本项 audit 的得分与详情。</p><div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">static</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">audit</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">artifacts</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// 获取所需的中间产物</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> runtimeExceptions </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> artifacts</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access maybe-class-name">RuntimeExceptions</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// 数据的过滤与转换</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> runtimeExRows </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      runtimeExceptions</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">filter</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">entry</span><span class="token plain"> </span><span class="token arrow operator" style="color:#393A34">=&gt;</span><span class="token plain"> entry</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">exceptionDetails</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">!==</span><span class="token plain"> </span><span class="token keyword nil" style="color:#00009f">undefined</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">map</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">entry</span><span class="token plain"> </span><span class="token arrow operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> description </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> entry</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">exceptionDetails</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">exception</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">?</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          entry</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">exceptionDetails</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">exception</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">description</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> entry</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">exceptionDetails</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">text</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword control-flow" style="color:#00009f">return</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token literal-property property" style="color:#36acaa">source</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'Runtime.exception'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          description</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token literal-property property" style="color:#36acaa">url</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> entry</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">exceptionDetails</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">url</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// 省略表格详情生成代码</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token spread operator" style="color:#393A34">...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// 计算出审计项的得分</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> numErrors </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> tableRows</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">length</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword control-flow" style="color:#00009f">return</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token literal-property property" style="color:#36acaa">score</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token known-class-name class-name">Number</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">numErrors </span><span class="token operator" style="color:#393A34">===</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token literal-property property" style="color:#36acaa">numericValue</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> numErrors</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      details</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>有了上面的示例，我们就可以参照实现一个自定义审计项，如审计页面标题：</p><div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">class</span><span class="token plain"> </span><span class="token class-name">PageTitle</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">extends</span><span class="token plain"> </span><span class="token class-name">Audit</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">static</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">get</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">meta</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword control-flow" style="color:#00009f">return</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token literal-property property" style="color:#36acaa">id</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"page-title"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token literal-property property" style="color:#36acaa">title</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"title of page document"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token literal-property property" style="color:#36acaa">failureTitle</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"Does not have page title"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token literal-property property" style="color:#36acaa">description</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"This audit get document.title when page loaded"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token literal-property property" style="color:#36acaa">requiredArtifacts</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">"PageTitle"</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">static</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">audit</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">artifacts</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword control-flow" style="color:#00009f">return</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token literal-property property" style="color:#36acaa">score</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> artifacts</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access maybe-class-name">PageTitle</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">?</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token literal-property property" style="color:#36acaa">displayValue</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> artifacts</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access maybe-class-name">PageTitle</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">||</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"none"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>当运行完配置文件中定义的所有审计项后，就得到了每个审计项的评分与详情，后续就进入 Report 模块。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="report-模块">Report 模块<a href="#report-模块" class="hash-link" aria-label="Report 模块的直接链接" title="Report 模块的直接链接">​</a></h3><p>在配置文件中，会定义每个测试类别所需的审计项，以及每个审计项所占的权重。如下所示的为性能（performance）这项测试类别所需的审计项：</p><div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token string-property property" style="color:#36acaa">'performance'</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token literal-property property" style="color:#36acaa">title</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">str_</span><span class="token punctuation" style="color:#393A34">(</span><span class="token maybe-class-name">UIStrings</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">performanceCategoryTitle</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token literal-property property" style="color:#36acaa">auditRefs</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token literal-property property" style="color:#36acaa">id</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'first-contentful-paint'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token literal-property property" style="color:#36acaa">weight</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">3</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token literal-property property" style="color:#36acaa">group</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'metrics'</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token literal-property property" style="color:#36acaa">id</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'first-meaningful-paint'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token literal-property property" style="color:#36acaa">weight</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token literal-property property" style="color:#36acaa">group</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'metrics'</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token literal-property property" style="color:#36acaa">id</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'speed-index'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token literal-property property" style="color:#36acaa">weight</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">4</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token literal-property property" style="color:#36acaa">group</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'metrics'</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token literal-property property" style="color:#36acaa">id</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'interactive'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token literal-property property" style="color:#36acaa">weight</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">5</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token literal-property property" style="color:#36acaa">group</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'metrics'</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token literal-property property" style="color:#36acaa">id</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'first-cpu-idle'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token literal-property property" style="color:#36acaa">weight</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">2</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token literal-property property" style="color:#36acaa">group</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'metrics'</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token literal-property property" style="color:#36acaa">id</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'max-potential-fid'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token literal-property property" style="color:#36acaa">weight</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token literal-property property" style="color:#36acaa">group</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'metrics'</span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// 省略</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>在最终汇总阶段，Lighthouse 会基于该配置文件以及上一个环节中计算出的每个审计项的评分，加权计算出 performance 的评分。并基于每个审计项的评分与种类，将审计项划分为通过与不通过，对于不通过的审计项会给出详细的测试详情与优化指引。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="fcp-等性能指标审计项的实现">FCP 等性能指标审计项的实现<a href="#fcp-等性能指标审计项的实现" class="hash-link" aria-label="FCP 等性能指标审计项的实现的直接链接" title="FCP 等性能指标审计项的实现的直接链接">​</a></h2><p>在上文介绍整体测试流程的过程中，我选择了最为简单的审计项展开介绍，本节会挑选大家更为关心的性能审计指标如 FCP 展开介绍。</p><blockquote><p>FCP（First Contentful Paint） 首次内容绘制时间，是从页面导航开始，到浏览器从 DOM 中渲染出首个内容的时间。</p></blockquote><h3 class="anchor anchorWithStickyNavbar_LWe7" id="限速模拟">限速模拟<a href="#限速模拟" class="hash-link" aria-label="限速模拟的直接链接" title="限速模拟的直接链接">​</a></h3><p>由于页面性能受宿主机网络与 CPU 频率等参数的影响较大，Lighthouse 提供了三种方式供模拟较差的宿主机环境，其背后的逻辑是，如果页面能够在较差的环境下达到一个较好的测试分数、那么大部分用户对页面的直观感受都会较好。</p><p>在 Chrome Devtools 的 Audits 面板中，可以看到三种限速方式：</p><p><img loading="lazy" src="https://p1.music.126.net/cRs259nIe70Tt5bhlph4TA==/109951164432290382.png?imageView=1&amp;thumbnail=500x0" alt="image" class="img_ev3q"></p><p>上图配置项分别对应下面三种限速方式的介绍</p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="simulated">simulated<a href="#simulated" class="hash-link" aria-label="simulated的直接链接" title="simulated的直接链接">​</a></h4><blockquote><p>Throttling is simulated, resulting in faster audit
runs with similar measurement accuracy</p></blockquote><p>即限速是模拟的（加载页面时不进行限速，加载完页面后，模拟计算出在限速条件下的性能指标值），所以可以在较快的速度下地完成审计并有相似的测试精度。</p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="devtools">devtools<a href="#devtools" class="hash-link" aria-label="devtools的直接链接" title="devtools的直接链接">​</a></h4><blockquote><p>Typical DevTools throttling, with actual traffic shaping
and CPU slowdown applied</p></blockquote><p>即通过 DevTools 进行限速，页面是在一个真实受限的网络与降速 CPU 条件下加载的。</p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="no-throttling">no throttling<a href="#no-throttling" class="hash-link" aria-label="no throttling的直接链接" title="no throttling的直接链接">​</a></h4><blockquote><p>No network or CPU throttling used.
(Useful when not evaluating performance)</p></blockquote><p>即 Lighthouse 不进行额外的限速，通常在不进行性能测试、或开发者自行对宿主机进行限速时使用该项。</p><p>在三种限速方式中，Lighthouse 真正对网络与 CPU 进行限速的只有 devtools 这种限速方式，实现的方式是通过上文提到的 Driver 模块发送对应领域的指令给 Chrome 浏览器：</p><div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">// 开启CPU限速</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">enableCPUThrottling</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">driver</span><span class="token parameter punctuation" style="color:#393A34">,</span><span class="token parameter"> throttlingSettings</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> rate </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> throttlingSettings</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">cpuSlowdownMultiplier</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword control-flow" style="color:#00009f">return</span><span class="token plain"> driver</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">sendCommand</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"Emulation.setCPUThrottlingRate"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> rate </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// 开启网络限速</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">enableNetworkThrottling</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">driver</span><span class="token parameter punctuation" style="color:#393A34">,</span><span class="token parameter"> throttlingSettings</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// 省略部分代码</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword control-flow" style="color:#00009f">return</span><span class="token plain"> driver</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">sendCommand</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"Network.emulateNetworkConditions"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> conditions</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="trace-信息">Trace 信息<a href="#trace-信息" class="hash-link" aria-label="Trace 信息的直接链接" title="Trace 信息的直接链接">​</a></h3><p>在上文介绍 pass 时，我们提到其中有一个参数用来控制是否收集 Trace 信息，Trace 信息是什么？它又有什么用呢？</p><p>其实我们大部分同学都已经接触过 Trace 信息，它的可视化展示就在 Chrome devtools 中 Performance 面板：</p><p><img loading="lazy" src="https://p1.music.126.net/xJAmmSQiSuSLCiCSF6RVuw==/109951164432359102.png?imageView=1&amp;thumbnail=750x0" alt="image" class="img_ev3q"></p><p>在这个可视化面板中，可以看到页面加载过程中关键渲染节点 FP、FCP、FMP 等，并可以看到主线程进行的 Parse HTML、Layout、JS 的执行依赖情况等。</p><p>当 pass 中配置了开启收集 Trace 信息时，Lighthouse 在页面加载完毕后，就可以拿到完整的 Trace 信息， 从中可以知道页面加载时的 FCP、FMP 等关键渲染节点。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="fcp-的模拟计算">FCP 的模拟计算<a href="#fcp-的模拟计算" class="hash-link" aria-label="FCP 的模拟计算的直接链接" title="FCP 的模拟计算的直接链接">​</a></h3><p>当使用 devtools、no throttling 这两种方式进行限速时，由于页面就是在真实受限的网络条件下加载的，Trace 信息中给出的 FCP 值就是限速条件下的 FCP 值，所以 Lighthouse 无需进行任何额外的加工处理。</p><p>但在 simulated 这种限速方式下，页面是在没有限速的条件下加载，所以 Trace 中的 FCP 是不限速时的 FCP，Lighthouse 需要通过模拟计算的方式，得出在给定限速条件下的 FCP 估算值。接下来我们重点介绍 simulated 这种模拟方式下，FCP 的计算。</p><p>上文我们提到在 Driver 模块中有个 NetworkRecorder，这个模块会记录页面加载过程中的所有网络请求详情，Lighthouse 会为每个有效的网络请求事件建立一个对应的 Network Node 节点。</p><p>Trace 信息中也会记录页面加载过程中 CPU 执行事件，Lighthouse 会为每个有效的 CPU 事件建立一个对应的 CPU Node 节点。</p><p><img loading="lazy" src="https://p1.music.126.net/0X559jq5We58R_Evxfudzg==/109951164432376568.png?imageView=1&amp;thumbnail=500x0" alt="image" class="img_ev3q"></p><p>紧接着，Lighthouse 会从 Network 请求节点中找出根节点（请求 Document 的节点），并根据节点依赖算法，建立起 CPU 节点与 Network 节点之间的依赖，最终生成页面加载依赖的有向无环图：</p><p><img loading="lazy" src="https://p1.music.126.net/8DpOfnsLMxJ1WC8_fLiVkg==/109951164464186053.png?imageView=1&amp;thumbnail=500x0" alt="image" class="img_ev3q"></p><p>建立了页面加载所需的完整依赖图后，Lighthouse 会结合 Trace 信息中的 FCP 事件时间，分析出页面 FCP 所需的的依赖图：</p><p><img loading="lazy" src="https://p1.music.126.net/ISsY4ULcx5suJyAmFFDK4Q==/109951164432433536.png?imageView=1&amp;thumbnail=500x0" alt="image" class="img_ev3q"></p><p>有了页面 FCP 所需的依赖图后，Lighthouse 模拟计算出，在限速条件下，请求依赖图中的资源，执行依赖图中的 CPU 事件，所需的耗时，以此得出在特定限速条件下的 FCP 估算值。</p><p><img loading="lazy" src="https://p1.music.126.net/9Yb1szCkhGKqgU5vLtI1Uw==/109951164432437663.png?imageView=1&amp;thumbnail=750x0" alt="image" class="img_ev3q"></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="模拟-http-请求">模拟 HTTP 请求<a href="#模拟-http-请求" class="hash-link" aria-label="模拟 HTTP 请求的直接链接" title="模拟 HTTP 请求的直接链接">​</a></h3><p>Lighthouse 通过模拟 HTTP 的方式，计算出在特定网络条件下的资源下载耗时，而不是真实地发起网络请求，我们来看下 Lighthouse 是如何做模拟的。</p><p><img loading="lazy" src="https://p1.music.126.net/ZdUR1vPSs8b75NgCmf0RQw==/109951164432467024.png?imageView=1&amp;thumbnail=750x0" alt="image" class="img_ev3q"></p><p><img loading="lazy" src="https://p1.music.126.net/R58QU2rjt5qZhdZ9uslBlw==/109951164432464625.png?imageView=1&amp;thumbnail=750x0" alt="image" class="img_ev3q"></p><p>在上述的代码中，我们看到 Lighthouse 完全是通过模拟 HTTP 的方式，计算出了一个资源在特定网络条件下，所需要的耗时。并且这个模拟考虑了 HTTP2 多路复用技术、 请求是否 KeepAlive、TCP 三次握手、拥塞窗口等细节。</p><p>我们用一张图来总结和对比一下，两种限速方式计算 FCP 的流程差异：</p><p><img loading="lazy" src="https://p1.music.126.net/t9h4x0Y0FCW6BqOq8Ogb2Q==/109951164432474551.png?imageView=1&amp;thumbnail=750x0" alt="image" class="img_ev3q"></p><p>可以看出两种限速方式，都是以 DevTools 给出的 Trace 信息为基础，在 Simulate 限速方式下，在拿到 FCP 值后，还需要模拟计算在限速条件下的估算值。在 Simulate 限速方式下，其他性能指标如 FMP、SpeedIndex 等也是通过类似的方式进行模拟计算，至此我们分析完了 Lighthouse 性能指标 FCP 审计项的实现原理。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="总结">总结<a href="#总结" class="hash-link" aria-label="总结的直接链接" title="总结的直接链接">​</a></h2><p>本篇文章为大家简要介绍了 Lighthouse、并分析了 Lighthouse 的测试流程与主要的模块实现，最后向大家介绍了关键性能指标 FCP 的模拟计算方式，希望能对大家有所收获。文末会贴出文章中提到的模块的源码导航，有兴趣的朋友可以看下，欢迎大家进行交流。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="源码导航">源码导航<a href="#源码导航" class="hash-link" aria-label="源码导航的直接链接" title="源码导航的直接链接">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="driver-模块-1">Driver 模块<a href="#driver-模块-1" class="hash-link" aria-label="Driver 模块的直接链接" title="Driver 模块的直接链接">​</a></h3><ul><li><a href="https://github.com/GoogleChrome/lighthouse/blob/master/lighthouse-core/gather/driver.js" target="_blank" rel="noopener noreferrer">driver</a></li><li><a href="https://github.com/GoogleChrome/lighthouse/blob/master/lighthouse-core/gather/connections/cri.js" target="_blank" rel="noopener noreferrer">connection</a></li><li><a href="https://github.com/GoogleChrome/lighthouse/blob/master/lighthouse-core/lib/emulation.js" target="_blank" rel="noopener noreferrer">emulation</a></li><li><a href="https://github.com/GoogleChrome/lighthouse/blob/master/lighthouse-core/lib/network-recorder.js" target="_blank" rel="noopener noreferrer">network-recorder</a></li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="gatherer-模块-1">Gatherer 模块<a href="#gatherer-模块-1" class="hash-link" aria-label="Gatherer 模块的直接链接" title="Gatherer 模块的直接链接">​</a></h3><ul><li><a href="https://github.com/GoogleChrome/lighthouse/blob/master/lighthouse-core/gather/gather-runner.js" target="_blank" rel="noopener noreferrer">gather-runner</a></li><li><a href="https://github.com/GoogleChrome/lighthouse/blob/master/lighthouse-core/gather/gatherers/gatherer.js" target="_blank" rel="noopener noreferrer">gatherer</a></li><li><a href="https://github.com/GoogleChrome/lighthouse/blob/master/lighthouse-core/gather/gatherers/runtime-exceptions.js" target="_blank" rel="noopener noreferrer">runtime-exceptions</a></li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="audit-模块">Audit 模块<a href="#audit-模块" class="hash-link" aria-label="Audit 模块的直接链接" title="Audit 模块的直接链接">​</a></h3><ul><li><a href="https://github.com/GoogleChrome/lighthouse/blob/master/lighthouse-core/audits/audit.js" target="_blank" rel="noopener noreferrer">audit</a></li><li><a href="https://github.com/GoogleChrome/lighthouse/tree/master/lighthouse-core/audits" target="_blank" rel="noopener noreferrer">error-in-console</a></li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="fcp-计算">FCP 计算<a href="#fcp-计算" class="hash-link" aria-label="FCP 计算的直接链接" title="FCP 计算的直接链接">​</a></h3><ul><li><a href="https://github.com/GoogleChrome/lighthouse/blob/1f07249f3f8653d66766815fb5ff4f125878cc28/lighthouse-core/audits/metrics/first-contentful-paint.js" target="_blank" rel="noopener noreferrer">audit/fcp</a></li><li><a href="https://github.com/GoogleChrome/lighthouse/blob/1f07249f3f/lighthouse-core/computed/metrics/first-contentful-paint.js" target="_blank" rel="noopener noreferrer">computed/fcp</a></li><li><a href="https://github.com/GoogleChrome/lighthouse/blob/1f07249f3f/lighthouse-core/computed/metrics/lantern-first-contentful-paint.js" target="_blank" rel="noopener noreferrer">computed/lantern-fcp</a></li><li><a href="https://github.com/GoogleChrome/lighthouse/blob/1f07249f3f/lighthouse-core/computed/metrics/lantern-metric.js" target="_blank" rel="noopener noreferrer">computed/lantern-metric</a></li><li><a href="https://github.com/GoogleChrome/lighthouse/blob/1f07249f3f/lighthouse-core/computed/page-dependency-graph.js" target="_blank" rel="noopener noreferrer">computed/page-dependency-graph</a></li><li><a href="https://github.com/GoogleChrome/lighthouse/blob/1f07249f3f/lighthouse-core/lib/dependency-graph/base-node.js" target="_blank" rel="noopener noreferrer">dependency-graph/base-node</a></li><li><a href="https://github.com/GoogleChrome/lighthouse/blob/1f07249f3f/lighthouse-core/lib/dependency-graph/simulator/tcp-connection.js" target="_blank" rel="noopener noreferrer">dependency-graph/tcp-connection</a></li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="参考文献">参考文献<a href="#参考文献" class="hash-link" aria-label="参考文献的直接链接" title="参考文献的直接链接">​</a></h2><ul><li><a href="https://github.com/GoogleChrome/lighthouse/blob/1f07249f3f8653d66766815fb5ff4f125878cc28/docs/architecture.md" target="_blank" rel="noopener noreferrer">Lighthouse-architecture</a></li><li><a href="https://chromedevtools.github.io/devtools-protocol/" target="_blank" rel="noopener noreferrer">Chrome DevTools Protocol</a></li><li><a href="https://developers.google.com/web/tools/lighthouse/v3/scoring" target="_blank" rel="noopener noreferrer">Lighthouse Scoring Guide</a></li></ul>]]></content>
        <author>
            <name>kkdev163</name>
            <uri>https://kkdev163.github.io</uri>
        </author>
        <category label="lighthouse" term="lighthouse"/>
        <category label="performance" term="performance"/>
        <category label="web" term="web"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[前端性能监控平台-存储与计算架构展望]]></title>
        <id>https://kkdev163.github.io/blog/wapm-storage</id>
        <link href="https://kkdev163.github.io/blog/wapm-storage"/>
        <updated>2019-03-29T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[前言]]></summary>
        <content type="html"><![CDATA[<h3 class="anchor anchorWithStickyNavbar_LWe7" id="前言">前言<a href="#前言" class="hash-link" aria-label="前言的直接链接" title="前言的直接链接">​</a></h3><p>本文首先介绍网易云音乐自研前端性能监控平台的架构现状和当前遇到的问题。随后介绍了 NTSDB 存储引擎可以解决的问题，并进一步给出更符合业界标准的监控平台存储与计算架构。文中 NTSDB 与业界通用架构主要是根据网易数据科学中心时序数据库领域专家-<a href="http://hbasefly.com/author/libisthanksgmail-com/" target="_blank" rel="noopener noreferrer">范欣欣</a>给出的建议整理而来。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="当前架构">当前架构<a href="#当前架构" class="hash-link" aria-label="当前架构的直接链接" title="当前架构的直接链接">​</a></h3><p><img loading="lazy" src="https://p1.music.126.net/tBao5AUpLEFlGenlxk4y0A==/109951163959092198.png" alt="image" class="img_ev3q">
浏览器端 SDK 采集的性能数据会经过 Nginx 负载均衡到 NodeJS 服务器, NodeJS 服务器对上报数据做合法校验后, 直接将原始数据转发至 InfluxProxy,InfluxProxy 根据配置将数据按表分片至底层的 InfluxDB 节点。</p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="influx-proxy-的集群的优势">Influx Proxy 的集群的优势<a href="#influx-proxy-的集群的优势" class="hash-link" aria-label="Influx Proxy 的集群的优势的直接链接" title="Influx Proxy 的集群的优势的直接链接">​</a></h4><p>当前我们的存储与计算架构的实现主要是依赖于 InfluxProxy、InfluxDB 所构成的计算存储集群。InfluxProxy 为饿了么开源的<a href="https://github.com/shell909090/influx-proxy" target="_blank" rel="noopener noreferrer">组件</a>,主要提供了以下的功能：</p><h5 class="anchor anchorWithStickyNavbar_LWe7" id="1按-measurement数据库表名做分片">1.按 measurement(数据库表名)做分片。<a href="#1按-measurement数据库表名做分片" class="hash-link" aria-label="1.按 measurement(数据库表名)做分片。的直接链接" title="1.按 measurement(数据库表名)做分片。的直接链接">​</a></h5><p>Proxy 节点中会维护 DB 节点与 measurement 的映射关系,根据该配置，可将同一个数据库的表存入不同的 DB 节点, 以达到横向扩展的目的。配置示意如下：</p><div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token literal-property property" style="color:#36acaa">db1</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">'table1'</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token literal-property property" style="color:#36acaa">db2</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">'table2'</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token literal-property property" style="color:#36acaa">db3</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">'table3'</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token spread operator" style="color:#393A34">...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h5 class="anchor anchorWithStickyNavbar_LWe7" id="2-数据备份能力">2. 数据备份能力。<a href="#2-数据备份能力" class="hash-link" aria-label="2. 数据备份能力。的直接链接" title="2. 数据备份能力。的直接链接">​</a></h5><p>InfluxDB 提供 replication 参数设置副本数，但单机版的副本在同一主机上，无法做到高可用。若在 proxy 上将同一张表配置在多个 DB 节点，在数据存入时，Proxy 会将数据写入多个 DB 节点，达到数据备份的目的，在读取时 Proxy 会选择其中一个 DB 节点取出数据，以实现 influxDB 节点的高可用并提高读取性能。配置示意如下：</p><div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token literal-property property" style="color:#36acaa">db1</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">'table1'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'table2'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'table3'</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token literal-property property" style="color:#36acaa">db2</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">'table1'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'table2'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'table3'</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h5 class="anchor anchorWithStickyNavbar_LWe7" id="3-写失败时缓存重试能力">3. 写失败时，缓存重试能力。<a href="#3-写失败时缓存重试能力" class="hash-link" aria-label="3. 写失败时，缓存重试能力。的直接链接" title="3. 写失败时，缓存重试能力。的直接链接">​</a></h5><p>当底层的 DB 节点挂掉时，Proxy 节点会将数据先写入本地文件中，待 DB 节点恢复后，Proxy 节点会将数据重新写入 DB 节点。</p><h5 class="anchor anchorWithStickyNavbar_LWe7" id="4-高危查询语句过滤能力">4. 高危查询语句过滤能力。<a href="#4-高危查询语句过滤能力" class="hash-link" aria-label="4. 高危查询语句过滤能力。的直接链接" title="4. 高危查询语句过滤能力。的直接链接">​</a></h5><p>若查询语句中不通过 where duration 指定查询范围, influx 会将符合该查询的全部索引加载至内存中，会产生极大的性能开销。Proxy 会过滤类似的高危查询语句。</p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="当前架构存在的痛点">当前架构存在的痛点<a href="#当前架构存在的痛点" class="hash-link" aria-label="当前架构存在的痛点的直接链接" title="当前架构存在的痛点的直接链接">​</a></h4><h5 class="anchor anchorWithStickyNavbar_LWe7" id="1-proxy-节点当前无高可用">1. Proxy 节点当前无高可用<a href="#1-proxy-节点当前无高可用" class="hash-link" aria-label="1. Proxy 节点当前无高可用的直接链接" title="1. Proxy 节点当前无高可用的直接链接">​</a></h5><p>Proxy 节点为整个存储与计算的入口, 若 Proxy 节点挂掉，性能监控的全部存储与计算服务就挂掉了。当然这个问题并非特别棘手，后续可以通过搭建多台 Proxy, 由 NodeJS 端做负载均衡来解决该问题。</p><h5 class="anchor anchorWithStickyNavbar_LWe7" id="2-proxy-是对读写请求做了一层代理非-master-slave-集群模式">2. Proxy 是对读写请求做了一层代理，非 master slave 集群模式<a href="#2-proxy-是对读写请求做了一层代理非-master-slave-集群模式" class="hash-link" aria-label="2. Proxy 是对读写请求做了一层代理，非 master slave 集群模式的直接链接" title="2. Proxy 是对读写请求做了一层代理，非 master slave 集群模式的直接链接">​</a></h5><p>Proxy 节点维护了表与 DB 实例的映射关系，做了一层数据读写的代理。但像创建 Petention Policy(数据保留过期策略)、创建 Continue Query(持续查询)等无法做代理和同步，需要手动连接至 DB 节点进行管理。这样会存在什么问题呢？</p><p>当只有一两个 DB 节点时, 这样手动管理并没有太大问题。但是当 DB 实例个数继续扩大后, 手动管理分片 A 实例、分片 B 实例、分片 A 副本实例、分片 B 副本实例, 若后续还有数据迁移，则 CQ 配置的管理将是一个噩梦。</p><h5 class="anchor anchorWithStickyNavbar_LWe7" id="3-扩容和数据迁移成本高">3. 扩容和数据迁移成本高<a href="#3-扩容和数据迁移成本高" class="hash-link" aria-label="3. 扩容和数据迁移成本高的直接链接" title="3. 扩容和数据迁移成本高的直接链接">​</a></h5><p>由于 Proxy 是按照表进行数据的分片, 假设一开始只用到了 Proxy 提供的数据备份能力即按以下进行配置：</p><div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token literal-property property" style="color:#36acaa">db1</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">'table1'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'table2'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'table3'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'table4'</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token literal-property property" style="color:#36acaa">db2</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">'table1'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'table2'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'table3'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'table4'</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>当接入的应用数逐步增加后, 一台 db 无法承载 3 张表的存储与计算开销。我们做扩容的工作,比如新申请 2 台机器，把 table3、table4 拆分到新的机器上。</p><div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token literal-property property" style="color:#36acaa">db1</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">'table1'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'table2'</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token literal-property property" style="color:#36acaa">db2</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">'table1'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'table2'</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token literal-property property" style="color:#36acaa">db3</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">'table3'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'table4'</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token literal-property property" style="color:#36acaa">db4</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">'table3'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'table4'</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>除了修改 Proxy 的配置，我们还需要将原本 db1 db2 上的数据迁移到 db3、db4 上。并且把原本针对 table3、table4 的 CQ 配置也迁移到 db3、db4。</p><h5 class="anchor anchorWithStickyNavbar_LWe7" id="4-仅支持-measurement-层面的分片-无法按数据分片">4. 仅支持 measurement 层面的分片, 无法按数据分片<a href="#4-仅支持-measurement-层面的分片-无法按数据分片" class="hash-link" aria-label="4. 仅支持 measurement 层面的分片, 无法按数据分片的直接链接" title="4. 仅支持 measurement 层面的分片, 无法按数据分片的直接链接">​</a></h5><p>假设随着应用的增多，我们已经忍着剧痛，把数据拆成了这种地步：</p><div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token literal-property property" style="color:#36acaa">db1</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">'table1'</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token literal-property property" style="color:#36acaa">db2</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">'table2'</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token literal-property property" style="color:#36acaa">db3</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">'table3'</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token literal-property property" style="color:#36acaa">db4</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">'table4'</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>之后我们又会遇到新的问题：table1 撑满了。。现在我们除了升级 db1 的机器，再没有别的办法扩容了。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="ntsdb">NTSDB<a href="#ntsdb" class="hash-link" aria-label="NTSDB的直接链接" title="NTSDB的直接链接">​</a></h3><p>NTSDB 为网易数据科学中心基于 Influx 自研的时序数据库。基本架构示意如下：
<img loading="lazy" src="https://p1.music.126.net/249sryZCD3i2-6gdvlJtAQ==/109951163959223735.png" alt="image" class="img_ev3q"></p><p>集群拥有 3 台 master 节点, 负责接收数据读写请求、同步数据库管理配置如创建 Petention Policy(数据保留过期策略)、创建 Continue Query(持续查询), master 节点非常轻量。实际的存储与计算任务由 Shard Server 进行。</p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="influx-存储模型简介">Influx 存储模型简介<a href="#influx-存储模型简介" class="hash-link" aria-label="Influx 存储模型简介的直接链接" title="Influx 存储模型简介的直接链接">​</a></h4><p><img loading="lazy" src="https://p1.music.126.net/aMzLd3vJJGPydkRsUWQFYw==/109951163959253224.png" alt="image" class="img_ev3q">
在一张 Influx 数据库之上可以创建任意多个 Rentention Policy(数据保留策略),  一个 RP 可以<a href="https://docs.influxdata.com/influxdb/v1.7/query_language/database_management/#create-retention-policies-with-create-retention-policy" target="_blank" rel="noopener noreferrer">配置</a>如下参数：</p><ul><li>DURATION: 数据过期时间, 过期后的数据自动删除。</li><li>REPLICATION: 副本数 。</li><li>SHARD DURATION: shard group 的持续时长, 持续时间结束后会形成新的 ShardGroup.</li><li>SHARD BUCKET: 每个 Shard Group 包含的 Shard 个数。Influx DB 单机版未提供该参数(默认为 1)、NTSDB 提供该配置。</li></ul><p>举例来说当配置</p><div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token variable" style="color:#36acaa">$CREATE</span><span class="token plain"> RETENTION POLICY </span><span class="token string" style="color:#e3116c">"rp_only_week"</span><span class="token plain"> ON </span><span class="token string" style="color:#e3116c">"wapm"</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">DURATION 7d </span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">REPLICATION </span><span class="token number" style="color:#36acaa">2</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">SHARD DURATION 1d  </span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">SHARD BUCKET </span><span class="token number" style="color:#36acaa">3</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>我们创建了一个名为<code>rp_only_week</code>的 RP, 其数据最长保留 7 天，副本数为 2 个，ShardGroup 的持续时间为 1 天, 每个 ShardGroup 含有 3 个 Shard。</p><p>存入数据时是可以指定 RP(未指定时有默认 RP), 我们可以将上报的原始数据存入 7 天的 RP 内, 将聚合过后的数据，存入一年过期的 RP 内。数据的过期，不是将每一条记录的时间与 duration 做对比，而是判断一个 ShardGroup 内的最新的数据是否已经过期，如果最新一条记录都过期了，则整个 ShardGroup 内的数据做批量删除，效率非常高。</p><p> 当有数据存入时，influx 会将数据的 measurement + tagKey1 + tagValue1 + tagKey2 + tagValue2 +... 形成 SeriesKey, 并将 SeriesKey 做 hash 运算后存入某个 shard 内。同一个 ShardGroup 内 Shard 个数越多，读写性能越高。可以将 Shard 理解为 Influx 实际做存储与计算引擎。</p><p> 回头来看下 NTSDB 的架构：
<img loading="lazy" src="https://p1.music.126.net/249sryZCD3i2-6gdvlJtAQ==/109951163959223735.png" alt="image" class="img_ev3q">
一个数据库的数据可分为多个 shard 落到不同的 ShardServer 上，每个 shard 都有自己的副本，存到不同的主机上，以保证高可用。并且我们可以横向无限地增加 ShardServer 的个数，当一台 ShardServer 无法承担一个 Shard 的压力时，我们可以调整 SHARD BUCKET 的数量，让数据均摊到其他节点。而节点的保活、备份、Petention Policy(数据保留过期策略)、Continue Query(持续查询)的管理都可以只连接到一台 master 上进行管理，master 节点会自动同步给其他节点。</p><p>可以说 NTSDB 完美地解决了我们当前存储架构的痛点。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="标准架构">标准架构<a href="#标准架构" class="hash-link" aria-label="标准架构的直接链接" title="标准架构的直接链接">​</a></h3><p>我们当前的架构可以简单抽象为如下流程：
<img loading="lazy" src="https://p1.music.126.net/FDMpSUh5Cb-oPSOydP5fbQ==/109951163959325299.png" alt="image" class="img_ev3q">
 我们将所有的原始数据存入 Influx, 并在 Influx 上建立 CQ 做预聚合计算，以提高查询性能。</p><p>在此架构之上，我们计划再进一步，引进业界更为通用的存储计算架构：
<img loading="lazy" src="https://p1.music.126.net/SsF26FVK5sqc8xhWz1a4fw==/109951163959336654.png" alt="image" class="img_ev3q"></p><p>我们引入 Kafka 来做消息队列，有如下几点好处：</p><ul><li>原本 Server 直接对 Influx, Influx 若挂掉，则这段时间内的数据就会完全丢失。引入消息队列后，数据可以先入队，后消费。</li><li>可应对高峰流量，高峰流量不常有，如果为了高峰流量而一直预备着高配机器，多少会是一种浪费，而引入 kafka，influx 就不需要有完全匹配高峰流量的配置，高峰时可在 kafka 先缓存，待高峰过后，逐步消费。</li></ul><p>引入 Flink 做聚合计算，有如下几点好处：</p><ul><li>更专业, 大数据分布式计算平台，提供更多的聚合函数，通过写 SQL 就可以完成聚合任务配置。</li><li>更灵活, 未提供的聚合函数，可通过开发 JAR 包的方式，灵活自定义配置。</li></ul><p>网易云音乐基于 Flink 自研的<a href="https://music-rtfm.hz.NetEase.com/magina-doc/" target="_blank" rel="noopener noreferrer">Magina 平台</a>可简化 Flink 的使用，让大数据计算更加亲民。</p><p>文末再次感谢网易数据科学中心-时序数据库领域专家-<a href="http://hbasefly.com/author/libisthanksgmail-com/" target="_blank" rel="noopener noreferrer">范欣欣</a>，对云音乐前端性能监控平台的架构改进提出的宝贵建议。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="参考">参考<a href="#参考" class="hash-link" aria-label="参考的直接链接" title="参考的直接链接">​</a></h3><ul><li><a href="https://docs.influxdata.com/influxdb/v1.7/query_language/database_management/#create-retention-policies-with-create-retention-policy" target="_blank" rel="noopener noreferrer">Influx Db 文档</a></li><li><a href="https://gitbook.cn/books/59428f6f7e850f039399fd02/index.html" target="_blank" rel="noopener noreferrer">刘平：饿了么 Influxdb 实战解析</a></li><li><a href="http://hbasefly.com/2017/12/08/influxdb-1/" target="_blank" rel="noopener noreferrer">范欣欣-时序数据库技术体系 - 初识 InfluxDB</a></li><li><a href="http://hbasefly.com/2018/01/13/timeseries-database-4/" target="_blank" rel="noopener noreferrer">范欣欣-时序数据库技术体系 - InfluxDB TSM 存储引擎之 TSMFile</a></li><li><a href="http://hbasefly.com/2018/02/09/timeseries-database-5/" target="_blank" rel="noopener noreferrer">范欣欣-时序数据库技术体系 - InfluxDB 多维查询之倒排索引</a></li><li><a href="http://kms.NetEase.com/#/article/5933" target="_blank" rel="noopener noreferrer">范欣欣-网易时序数据库，丰富你的技术栈</a></li></ul>]]></content>
        <author>
            <name>kkdev163</name>
            <uri>https://kkdev163.github.io</uri>
        </author>
        <category label="influxdb" term="influxdb"/>
        <category label="performance" term="performance"/>
        <category label="web" term="web"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Sentry平台-为Docker Swarm集群添加SSHFS分布式文件存储]]></title>
        <id>https://kkdev163.github.io/blog/sentry-sshfs</id>
        <link href="https://kkdev163.github.io/blog/sentry-sshfs"/>
        <updated>2019-03-28T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[前言]]></summary>
        <content type="html"><![CDATA[<h3 class="anchor anchorWithStickyNavbar_LWe7" id="前言">前言<a href="#前言" class="hash-link" aria-label="前言的直接链接" title="前言的直接链接">​</a></h3><p>本文首先介绍了网易云音乐私有化部署的 Sentry 平台系统架构和当前业务上遇到的分布式存储问题，最后给出搭建 SSHFS 存储环境解决该问题的实现步骤。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="sentry-架构">Sentry 架构<a href="#sentry-架构" class="hash-link" aria-label="Sentry 架构的直接链接" title="Sentry 架构的直接链接">​</a></h3><p><img loading="lazy" src="https://p1.music.126.net/khgxZ3hwssENM7Y8gJ--1Q==/109951163959632735.png" alt="image" class="img_ev3q">
 当前 Sentry 平台的部署采用了三台宿主机构成的 Docker Swarm 集群。Docker 容器内运行的 WSGI 可理解为错误事件的生产者进程, Redis 理解为消息队列，Celery worker 为错误事件的消费进程。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="遇到的问题">遇到的问题<a href="#遇到的问题" class="hash-link" aria-label="遇到的问题的直接链接" title="遇到的问题的直接链接">​</a></h3><p>Sentry 平台提供根据 SourceMap 解析混淆代码的能力, 比如原始收集到的错误如下：
<img loading="lazy" src="https://p1.music.126.net/c5ZHOyvdcvZnAD1eAuaqcA==/109951163895796415.jpg" alt="image" class="img_ev3q">
通过 SourceMap 解析后：
<img loading="lazy" src="https://p1.music.126.net/lLtnyXr7IJ6Yj_NZXRrKkw==/109951163895799468.png" alt="image" class="img_ev3q">
为了保证源代码的安全，sentry 提供了<a href="https://docs.sentry.io/platforms/node/sourcemaps/" target="_blank" rel="noopener noreferrer">Webpack 插件</a>，可将打包后的 js 文件及 sourceMap 文件提前上传至 Sentry 后台，在后续收到错误上报时直接从文件系统中读取 js 及 map 文件。</p><p>Sentry 提供了一层 filestore 抽象配置，用于文件的存储。默认配置下，是写本地磁盘，官网是不建议在生产环境使用的。除此之外 Sentry 还提供了 Google Cloud Storage、Amazon S3 Backend 的配置，类似于网易的 NOS 存储服务。</p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="直接写本地磁盘会遇到的问题">直接写本地磁盘会遇到的问题？<a href="#直接写本地磁盘会遇到的问题" class="hash-link" aria-label="直接写本地磁盘会遇到的问题？的直接链接" title="直接写本地磁盘会遇到的问题？的直接链接">​</a></h4><p>如下图所示意：当进行文件上传时，Nginx 会随机负载到一台机器上，如宿主机 A。</p><p><img loading="lazy" src="https://p1.music.126.net/eRzeeTxkCi0R5km0NaCTMA==/109951163894174028.png" alt="image" class="img_ev3q"></p><p>当前端产生错误上报时，请求可能会是由宿主机 C 上的消费容器进行处理。消费进程尝试从文件系统中读取 js 及 map 文件，由于无法读取到，此次解析就会失败，展示的还是混淆后的代码。</p><p><img loading="lazy" src="https://p1.music.126.net/txq_IEYwOJsWv78B7gRpFw==/109951163894172228.png" alt="image" class="img_ev3q"></p><p>网上有通过 NFS 来让跨主机的 Docker 集群进行文件共享的<a href="https://www.jianshu.com/p/0d59bc614baa?utm_source=oschina-app" target="_blank" rel="noopener noreferrer">方案</a>，示意图如下：
<img loading="lazy" src="https://p1.music.126.net/YTdUvXsEA4xdTnnS8fu01g==/109951163894176686.png" alt="image" class="img_ev3q">
搭建前想找 PE 同事讨论下能否可以协助搭建，还有方案潜在的风险，PE 评估后觉得 NFS 的方案比较老，不太稳定，不建议去使用。</p><p>与同事们讨论后可能的解决方案有：</p><ul><li><p>方案一: 将三台云主机迁移至 单台物理机上，但是存在单点的问题，并且后续无法扩展。(这可能是最快的方案)。</p></li><li><p>方案二: sentry 提供了亚马逊 s3 及谷歌云存储的配置，可以参考这两个存储的<a href="https://github.com/getsentry/sentry/tree/master/src/sentry/filestore" target="_blank" rel="noopener noreferrer">实现</a>，扩展一个 NOS 的实现。</p></li><li><p>方案三: 搭建 SSHFS 存储方案。</p></li></ul><p>最终评估后，我们采取了 SSHFS 的解决方案。下文对该方案的环境搭建做介绍。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="sshfs">SSHFS<a href="#sshfs" class="hash-link" aria-label="SSHFS的直接链接" title="SSHFS的直接链接">​</a></h3><h4 class="anchor anchorWithStickyNavbar_LWe7" id="首先提供最权威的搭建参考文档">首先提供最权威的搭建参考文档：<a href="#首先提供最权威的搭建参考文档" class="hash-link" aria-label="首先提供最权威的搭建参考文档：的直接链接" title="首先提供最权威的搭建参考文档：的直接链接">​</a></h4><ul><li><a href="https://docs.docker.com/storage/volumes/#use-a-volume-driver" target="_blank" rel="noopener noreferrer">Docker volume driver 文档</a></li><li><a href="https://github.com/vieux/docker-volume-sshfs" target="_blank" rel="noopener noreferrer">docker-volume-sshfs</a></li></ul><h4 class="anchor anchorWithStickyNavbar_LWe7" id="搭建后的存储示意图">搭建后的存储示意图：<a href="#搭建后的存储示意图" class="hash-link" aria-label="搭建后的存储示意图：的直接链接" title="搭建后的存储示意图：的直接链接">​</a></h4><p><img loading="lazy" src="https://p1.music.126.net/R5-6tL4aQ6Yl34TwistODw==/109951163959706351.png" alt="image" class="img_ev3q"></p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="搭建步骤">搭建步骤：<a href="#搭建步骤" class="hash-link" aria-label="搭建步骤：的直接链接" title="搭建步骤：的直接链接">​</a></h4><ol><li><p>三台机器建立 ssh 互访</p><ul><li>申请一个互访的公共账号</li><li>本地创建公私钥对, 可由 sa 协助将公私钥添加至三台机器</li><li>验证 3 台机器可任意进行 ssh 免密互访</li></ul></li><li><p>安装插件
每台机器都需要安装</p></li></ol><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$docker plugin install vieux/sshfs sshkey.source=/home/sentry/.ssh/</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><ol start="3"><li>创建数据卷
每台机器都需要安装</li></ol><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$docker volume create -d vieux/sshfs -o sshcmd=sentry@hzabj-music-xxxx-machine3:/home/sentry/data</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> -o port=1046 -o uid=999,gid=999 -o allow_other sshvolume</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>其中 uid=999,gid=999 为 Sentry 的 Docker 镜像内用户 id, 需要登录 Sentry 容器内检查是否一致，若不一致则修改为 Sentry 容器内的 uid.</p><ol start="4"><li>测试
在 machine1 上运行</li></ol><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$docker run -it --rm  -v sshvolume:/tmp:nocopy sentrybox /bin/bash</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$touch testfile</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>以上我们在/tmp 文件夹加下创建了 testfile，不出意外的话，在 machine3 的/home/sentry/data 文件夹内会同步出现该文件，验证文件共享成功。</p><ol start="5"><li>申请一块额外的硬盘，将该硬盘作为共享的数据存储盘
例如申请的新硬盘挂载在 /srv/nbs/0/目录下，则</li></ol><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$cd /srv/nbs/0/</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$mkdir -p ./home/sentry/data</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">$mount --bind ./home/sentry/data /home/sentry/data/</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>进行此操作后，/home/sentry/data/文件夹下的文件会存入新的硬盘。而/home/sentry/data/目录，为我们在第二步创建数据卷时指定的共享目录。经过以上配置，三台机器挂载 sshvolume 后存入的文件，都会落入新的硬盘，达到文件共享的目的。</p><ol start="6"><li>在 Docker Swarm 集群中使用
需要在 docker-compose.yml 文件内配置 sshfsvolume, 具体使用可参考以下配置:
<img loading="lazy" src="https://p1.music.126.net/ZJd6j-m2_VAF0mgCy_SKCw==/109951163959774896.png" alt="image" class="img_ev3q"></li></ol><p>需要注意的是若修改 docker-compose.yml 后，直接 deploy 失败的话，需要先执行 docker stack rm 将已有 service 移除</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$docker stack rm xxx</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>再执行一次</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">$docker stack deploy</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>至此为 Docker swarm 集群添加 sshfs 文件共享存储环境搭建完成。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="参考资料">参考资料<a href="#参考资料" class="hash-link" aria-label="参考资料的直接链接" title="参考资料的直接链接">​</a></h3><p>根据官网权威文档进行操作时，遇到了一些坑，解决遇到问题的参考的文献如下：</p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="solution">solution<a href="#solution" class="hash-link" aria-label="solution的直接链接" title="solution的直接链接">​</a></h4><p><a href="https://github.com/vieux/docker-volume-sshfs" target="_blank" rel="noopener noreferrer">https://github.com/vieux/docker-volume-sshfs</a></p><p><a href="https://docs.docker.com/storage/volumes/#use-a-volume-driver" target="_blank" rel="noopener noreferrer">https://docs.docker.com/storage/volumes/#use-a-volume-driver</a></p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="ssh-public_key">ssh <!-- -->[public_key]<a href="#ssh-public_key" class="hash-link" aria-label="ssh-public_key的直接链接" title="ssh-public_key的直接链接">​</a></h4><p><a href="https://blog.csdn.net/li528405176/article/details/82810342" target="_blank" rel="noopener noreferrer">https://blog.csdn.net/li528405176/article/details/82810342</a></p><p><a href="https://blog.csdn.net/rabit87/article/details/79705163" target="_blank" rel="noopener noreferrer">https://blog.csdn.net/rabit87/article/details/79705163</a></p><p><a href="https://blog.csdn.net/zyf2333/article/details/80373502" target="_blank" rel="noopener noreferrer">https://blog.csdn.net/zyf2333/article/details/80373502</a></p><p><a href="https://www.linuxquestions.org/questions/linux-software-2/sshfs-how-to-find-out-cause-of-read-connection-reset-by-peer-message-4175614683/" target="_blank" rel="noopener noreferrer">https://www.linuxquestions.org/questions/linux-software-2/sshfs-how-to-find-out-cause-of-read-connection-reset-by-peer-message-4175614683/</a></p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="chown-permission-deied-nocopy">chown permission deied <!-- -->[nocopy]<a href="#chown-permission-deied-nocopy" class="hash-link" aria-label="chown-permission-deied-nocopy的直接链接" title="chown-permission-deied-nocopy的直接链接">​</a></h4><p><a href="https://github.com/vieux/docker-volume-sshfs/issues/41" target="_blank" rel="noopener noreferrer">https://github.com/vieux/docker-volume-sshfs/issues/41</a></p><p><a href="https://github.com/docker/docker.github.io/issues/2992" target="_blank" rel="noopener noreferrer">https://github.com/docker/docker.github.io/issues/2992</a></p><p><a href="https://docs.docker.com/engine/reference/run/" target="_blank" rel="noopener noreferrer">https://docs.docker.com/engine/reference/run/</a></p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="permission-allow_other">permission <!-- -->[allow_other]<a href="#permission-allow_other" class="hash-link" aria-label="permission-allow_other的直接链接" title="permission-allow_other的直接链接">​</a></h4><p><a href="https://unix.stackexchange.com/questions/146544/chown-permission-denied-on-owned-dir" target="_blank" rel="noopener noreferrer">https://unix.stackexchange.com/questions/146544/chown-permission-denied-on-owned-dir</a></p><p><a href="https://ubuntuforums.org/showthread.php?t=1961204" target="_blank" rel="noopener noreferrer">https://ubuntuforums.org/showthread.php?t=1961204</a></p><p><a href="https://unix.stackexchange.com/questions/37168/unable-to-use-o-allow-other-with-sshfs-option-enabled-in-fuse-conf" target="_blank" rel="noopener noreferrer">https://unix.stackexchange.com/questions/37168/unable-to-use-o-allow-other-with-sshfs-option-enabled-in-fuse-conf</a></p><p><a href="https://unix.stackexchange.com/questions/222944/mount-with-sshfs-and-write-file-permissions" target="_blank" rel="noopener noreferrer">https://unix.stackexchange.com/questions/222944/mount-with-sshfs-and-write-file-permissions</a></p><p><a href="https://github.com/docker/for-win/issues/497" target="_blank" rel="noopener noreferrer">https://github.com/docker/for-win/issues/497</a></p><p><a href="https://forums.docker.com/t/volume-not-writable-to-non-root-user-container/36103/3" target="_blank" rel="noopener noreferrer">https://forums.docker.com/t/volume-not-writable-to-non-root-user-container/36103/3</a></p><p><a href="https://ubuntuforums.org/showthread.php?t=2036686" target="_blank" rel="noopener noreferrer">https://ubuntuforums.org/showthread.php?t=2036686</a></p><h4 class="anchor anchorWithStickyNavbar_LWe7" id="compose-syntax">compose <!-- -->[syntax]<a href="#compose-syntax" class="hash-link" aria-label="compose-syntax的直接链接" title="compose-syntax的直接链接">​</a></h4><p><a href="https://github.com/vieux/docker-volume-sshfs/issues/48" target="_blank" rel="noopener noreferrer">https://github.com/vieux/docker-volume-sshfs/issues/48</a></p><p><a href="https://github.com/vieux/docker-volume-sshfs/issues/65" target="_blank" rel="noopener noreferrer">https://github.com/vieux/docker-volume-sshfs/issues/65</a></p><p><a href="https://github.com/getsentry/docker-sentry/blob/master/9.0/Dockerfile" target="_blank" rel="noopener noreferrer">https://github.com/getsentry/docker-sentry/blob/master/9.0/Dockerfile</a></p>]]></content>
        <author>
            <name>kkdev163</name>
            <uri>https://kkdev163.github.io</uri>
        </author>
        <category label="sentry" term="sentry"/>
        <category label="sshfs" term="sshfs"/>
    </entry>
</feed>